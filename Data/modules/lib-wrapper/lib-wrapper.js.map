{"version":3,"file":"lib-wrapper.js","sources":["../src/libWrapper-consts.js","../src/utils/libWrapper-misc.js","../src/utils/libWrapper-package_info.js","../src/utils/errors/libWrapper-base_errors.js","../src/utils/libWrapper-polyfill.js","../src/ui/libWrapper-notifications.js","../src/utils/errors/listeners.js","../src/ui/libWrapper-stats.js","../src/ui/libWrapper-conflicts.js","../src/utils/errors/libWrapper-api_errors.js","../src/lib/libWrapper-wrapper.js","../src/ui/libWrapper-settings.js","../src/lib/libWrapper-api.js"],"sourcesContent":["// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\n//*********************\n// Package information\nexport const PACKAGE_ID    = 'lib-wrapper';\nexport const PACKAGE_TITLE = 'libWrapper';\n\n\n//*********************\n// Versioning\n\nexport let   VERSION           = '';\nexport let   MAJOR_VERSION     = -1;\nexport let   MINOR_VERSION     = -1;\nexport let   PATCH_VERSION     = -1;\nexport let   SUFFIX_VERSION    = -1;\nexport let   META_VERSION      = '';\nexport let   GIT_VERSION       = '';\nexport let   GIT_VERSION_SHORT = '';\nexport let   VERSION_WITH_GIT  = '';\n\nexport function parse_manifest_version() {\n\tif(VERSION)\n\t\treturn;\n\n\t// Find package manifest\n\tconst manifest = game.modules?.get(PACKAGE_ID)?.data;\n\tif(!manifest)\n\t\tthrow `libWrapper: Unable to find package manifest inside 'game.modules'`;\n\n\t// Grab git version\n\tGIT_VERSION       = manifest.flags?.git_version ?? 'unknown';\n\tGIT_VERSION_SHORT = (GIT_VERSION.length >= 40) ? GIT_VERSION.slice(0,7) : GIT_VERSION;\n\n\t// Parse version string\n\tconst version_str = manifest.version;\n\tif(!version_str)\n\t\tthrow `libWrapper: Unable to find version string inside package manifest`;\n\n\tconst match = version_str.match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+).([0-9]+)(.*)$/i);\n\tif(!match)\n\t\tthrow `libWrapper: Unable to parse version string '${version_str}'`\n\n\tVERSION        = match[0];\n\tMAJOR_VERSION  = parseInt(match[1]);\n\tMINOR_VERSION  = parseInt(match[2]);\n\tPATCH_VERSION  = parseInt(match[3]);\n\tSUFFIX_VERSION = parseInt(match[4]);\n\tMETA_VERSION   = match[5].replace(/^-/gi, '');\n\n\t// Conclude\n\tVERSION_WITH_GIT = `${VERSION} (${GIT_VERSION_SHORT})`;\n}\n\n\n//*********************\n// Miscellaneous definitions\nexport const IS_UNITTEST = (typeof Game === 'undefined');\nexport const PROPERTIES_CONFIGURABLE = IS_UNITTEST ? true : false;\n\n\n//*********************\n// Debug\nexport let DEBUG = false;\nexport function setDebug(new_debug) { DEBUG = new_debug; }\n\n\n//*********************\n// TYPES\nexport const TYPES_LIST = ['WRAPPER', 'MIXED', 'OVERRIDE'];\nObject.freeze(TYPES_LIST);\n\nexport const TYPES = {\n\tWRAPPER : 1,\n\tMIXED   : 2,\n\tOVERRIDE: 3\n};\nObject.freeze(TYPES);\n\nexport const TYPES_REVERSE = {};\nfor(let key in TYPES) {\n\tTYPES_REVERSE[TYPES[key]] = key;\n}\nObject.freeze(TYPES_REVERSE);\n\n\n//*********************\n// PERFORMANCE MODES\nexport const PERF_MODES_LIST = ['STANDARD', 'AUTO', 'FAST'];\nObject.freeze(PERF_MODES_LIST);\n\nexport const PERF_MODES = {\n\tSTANDARD: 1,\n\tAUTO    : 2,\n\tFAST    : 3\n};\nObject.freeze(PERF_MODES);\n\nexport const PERF_MODES_REVERSE = {};\nfor(let key in PERF_MODES) {\n\tPERF_MODES_REVERSE[PERF_MODES[key]] = key;\n}\nObject.freeze(PERF_MODES_REVERSE);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {IS_UNITTEST, PACKAGE_ID} from '../consts.js';\n\n\n// HACK: The browser doesn't expose all global variables (e.g. 'Game') inside globalThis, but it does to an eval\n// We declare this helper here so that the eval does not have access to the anonymous function scope\nexport const global_eval = eval;\n\nexport function get_global_variable(varname) {\n\ttry {\n\t\treturn globalThis[varname] ?? global_eval(varname);\n\t}\n\tcatch (e) {\n\t\treturn undefined;\n\t}\n}\n\n\n// Change the name of a function object\n// Note: This is extremely hacky, and only works in some browsers, and only sometimes (usually when a function is anonymous)\nexport function set_function_name(fn, name) {\n\ttry {\n\t\t// Only supported by Firefox: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\n\t\tfn.displayName = name;\n\n\t\t// Hack: Try and over-ride the 'name' property\n\t\tObject.defineProperty(fn, 'name', {\n\t\t\tvalue: name,\n\t\t\twritable: false,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\tcatch (e) {\n\t\t// disregard unless this is a unit test - probably unsupported by browser\n\t\tif(IS_UNITTEST)\n\t\t\tthrow e;\n\t}\n}\n\n// Decorate name\nexport function decorate_name(name, suffix='') {\n\tif(suffix !== '')\n\t\treturn `üéÅ${name}#${suffix}`;\n\telse\n\t\treturn `üéÅ${name}`;\n}\n\n// Decorate the name of all functions of a given class\n// Note: This is extremely hacky, and only works in some browsers, and only sometimes (usually when a function is anonymous)\nexport function decorate_class_function_names(klass) {\n\tconst props = Object.getOwnPropertyNames(klass);\n\tprops.push(...Object.getOwnPropertySymbols(klass))\n\n\tfor(const prop of props) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(klass, prop);\n\n\t\tif(typeof descriptor.value === 'function')\n\t\t\tset_function_name(descriptor.value, decorate_name(prop));\n\t\tif(typeof descriptor.get === 'function')\n\t\t\tset_function_name(descriptor.get, decorate_name(prop, 'getter'));\n\t\tif(typeof descriptor.set === 'function')\n\t\t\tset_function_name(descriptor.set, decorate_name(prop, 'setter'));\n\t}\n\n\tif(klass.prototype)\n\t\tdecorate_class_function_names(klass.prototype);\n}\n\n\n// Shared list of active wrappers\nexport const WRAPPERS = new Set();","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID} from '../consts.js';\n\n//*********************\n// ID types\nexport const PACKAGE_TYPES = {\n\tUNKNOWN: 0,\n\tMODULE : 1,\n\tSYSTEM : 2,\n\tWORLD  : 3\n};\nObject.freeze(PACKAGE_TYPES);\n\nexport const PACKAGE_TYPES_REVERSE = {};\nfor(let key in PACKAGE_TYPES) {\n\tPACKAGE_TYPES_REVERSE[PACKAGE_TYPES[key]] = key;\n}\nObject.freeze(PACKAGE_TYPES_REVERSE);\n\n\nconst KEY_SEPARATOR = '~';\n\n\n//*********************\n// Package info class\n// Stores package information. Able to auto-detect the package ID that is calling libWrapper.\nexport class PackageInfo {\n\tconstructor(id=null, type=null) {\n\t\tthis.set(id, type);\n\t}\n\n\tset(id=null, type=null, freeze=true) {\n\t\tif(!id)\n\t\t\treturn this.detect_id();\n\n\t\tif(typeof id !== 'string')\n\t\t\tthrow `libWrapper: PackageInfo IDs must be strings`;\n\n\t\tif(id.includes(KEY_SEPARATOR))\n\t\t\treturn this.from_key(id);\n\n\t\tthis.id = id;\n\t\tthis.type = type;\n\n\t\tif(!type)\n\t\t\tthis.detect_type();\n\n\t\tif(freeze)\n\t\t\tObject.freeze(this);\n\t}\n\n\tset_unknown() {\n\t\tthis.id = '\\u00ABunknown\\u00BB';\n\t\tthis.type = PACKAGE_TYPES.UNKNOWN;\n\t}\n\n\tequals(obj) {\n\t\treturn obj && (obj.constructor === this.constructor) && (obj.id === this.id) && (obj.type === this.type);\n\t}\n\n\tdetect_id(stack_trace=undefined) {\n\t\tthis.set_unknown();\n\n\t\tif(stack_trace === undefined) {\n\t\t\tconst old_stack_limit = Error.stackTraceLimit;\n\t\t\tError.stackTraceLimit = Infinity;\n\t\t\tstack_trace = Error().stack;\n\t\t\tError.stackTraceLimit = old_stack_limit;\n\n\t\t\tif(!stack_trace)\n\t\t\t\treturn;\n\t\t}\n\n\t\tconst matches = stack_trace.matchAll(/\\/(worlds|systems|modules)\\/(.+?)(?=\\/)/ig);\n\t\tif(!matches)\n\t\t\treturn;\n\n\t\tfor(let match of matches) {\n\t\t\tconst type = match[1];\n\t\t\tconst name = match[2];\n\n\t\t\tif(type === 'worlds') {\n\t\t\t\tif(name == game.data.world.id)\n\t\t\t\t\treturn this.set(name, PACKAGE_TYPES.WORLD);\n\t\t\t}\n\t\t\telse if(type === 'systems') {\n\t\t\t\tif(name == game.data.system.id)\n\t\t\t\t\treturn this.set(name, PACKAGE_TYPES.SYSTEM);\n\t\t\t}\n\t\t\telse if(type === 'modules') {\n\t\t\t\tif(!name || name == PACKAGE_ID || !game?.modules?.has(name))\n\t\t\t\t\tcontinue;\n\n\t\t\t\treturn this.set(name, PACKAGE_TYPES.MODULE);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(`libWrapper: Invalid script type: ${type}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tdetect_type() {\n\t\t// We need to support this even when 'game.modules' hasn't been initialised yet\n\t\tif(!game?.modules) {\n\t\t\tif(this.id === PACKAGE_ID)\n\t\t\t\tthis.type = PACKAGE_TYPES.MODULE;\n\t\t\telse\n\t\t\t\tthis.type = PACKAGE_TYPES.UNKNOWN;\n\n\t\t\treturn;\n\t\t}\n\n\t\tif(game.modules.get(this.id)?.active)\n\t\t\tthis.type = PACKAGE_TYPES.MODULE;\n\t\telse if(this.id === game.data.system.id)\n\t\t\tthis.type = PACKAGE_TYPES.SYSTEM;\n\t\telse if(this.id === game.data.world.id)\n\t\t\tthis.type = PACKAGE_TYPES.WORLD;\n\t\telse\n\t\t\tthis.type = PACKAGE_TYPES.UNKNOWN;\n\t}\n\n\tget known() {\n\t\treturn this.type != PACKAGE_TYPES.UNKNOWN;\n\t}\n\n\tget exists() {\n\t\tswitch(this.type) {\n\t\t\tcase PACKAGE_TYPES.MODULE:\n\t\t\t\treturn game.modules.get(this.id)?.active;\n\t\t\tcase PACKAGE_TYPES.SYSTEM:\n\t\t\t\treturn game.data.system.id === this.id;\n\t\t\tcase PACKAGE_TYPES.WORLD:\n\t\t\t\treturn game.data.world.id === this.id;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tget data() {\n\t\tif(!this.exists)\n\t\t\treturn null;\n\n\t\tswitch(this.type) {\n\t\t\tcase PACKAGE_TYPES.MODULE:\n\t\t\t\treturn game.modules.get(this.id)?.data;\n\t\t\tcase PACKAGE_TYPES.SYSTEM:\n\t\t\t\treturn game.data.system.data;\n\t\t\tcase PACKAGE_TYPES.WORLD:\n\t\t\t\treturn game.data.world;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tget title() {\n\t\tif(!this.exists)\n\t\t\treturn 'Unknown';\n\n\t\tswitch(this.type) {\n\t\t\tcase PACKAGE_TYPES.MODULE:\n\t\t\tcase PACKAGE_TYPES.SYSTEM:\n\t\t\tcase PACKAGE_TYPES.WORLD :\n\t\t\t\treturn this.data.title;\n\t\t\tdefault:\n\t\t\t\treturn 'Unknown';\n\t\t}\n\t}\n\n\tget key() {\n\t\treturn `${PACKAGE_TYPES_REVERSE[this.type].toLowerCase()}${KEY_SEPARATOR}${this.id}`;\n\t}\n\n\tfrom_key(key) {\n\t\tconst split = key.split(KEY_SEPARATOR);\n\t\tif(split.length !== 2)\n\t\t\tthrow `Error: Invalid key '${key}'`;\n\n\t\tthis.set(split[1], PACKAGE_TYPES[split[0]]);\n\t}\n\n\tget logString() {\n\t\tif(!this.known)\n\t\t\treturn 'an unknown package';\n\n\t\treturn `${PACKAGE_TYPES_REVERSE[this.type].toLowerCase()} '${this.id}'`;\n\t}\n\n\tget logStringCapitalized() {\n\t\tlet str = this.logString;\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t}\n\n\tget settingsName() {\n\t\tswitch(this.type) {\n\t\t\tcase PACKAGE_TYPES.MODULE:\n\t\t\t\treturn this.id;\n\t\t\tcase PACKAGE_TYPES.SYSTEM:\n\t\t\t\treturn `${this.id} [System]`;\n\t\t\tcase PACKAGE_TYPES.WORLD:\n\t\t\t\treturn `${this.id} [World]`;\n\t\t\tdefault:\n\t\t\t\treturn this.id;\n\t\t}\n\t}\n}\nObject.freeze(PackageInfo);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PackageInfo} from '../package_info.js';\n\n\n// Custom libWrapper Error\nexport class LibWrapperError extends Error {\n\tconstructor(ui_msg, console_msg, notification_fn, ...args) {\n\t\tsuper(`${ui_msg}\\n${console_msg}`, ...args);\n\n\t\t// Maintains proper stack trace for where our error was thrown (only available on V8)\n\t\tif (Error.captureStackTrace)\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\tthis.name = this.constructor.name;\n\n\t\t// Store arguments\n\t\tthis.ui_msg = ui_msg;\n\t\tthis.console_msg = console_msg;\n\t\tthis.notification_fn = notification_fn ?? 'error';\n\t}\n\n\t/**\n\t * Called if this error is unhandled\n\t */\n\tonUnhandled() {\n\t}\n}\nObject.freeze(LibWrapperError);\n\n\n\n// Internal error\nexport class LibWrapperInternalError extends LibWrapperError {\n\tconstructor(console_msg, ...args) {\n\t\tconst package_info = new PackageInfo();\n\n\t\tsuper(\n\t\t\tpackage_info.known ? `Internal error detected, possibly related to ${package_info.logString}.`\n\t\t\t                   : 'Internal error detected.'\n\t\t\t,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.package_info = package_info;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() { return this.package_id; }\n}\nObject.freeze(LibWrapperInternalError);\n\n\n\n// Error caused by a package\nexport class LibWrapperPackageError extends LibWrapperError {\n\tconstructor(console_msg, package_info, ...args) {\n\t\tlet possibly = false;\n\n\t\tif(!package_info) {\n\t\t\tpackage_info = new PackageInfo();\n\t\t\tpossibly = true;\n\t\t}\n\t\telse if(package_info?.constructor !== PackageInfo) {\n\t\t\tpackage_info = new PackageInfo(package_info);\n\t\t}\n\n\t\tsuper(\n\t\t\tpossibly ? `Error detected, possibly in ${package_info.logString}.` :\n\t\t\t           `Error detected in ${package_info.logString}.`,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.package_info = package_info;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() { return this.package_id; }\n}\nObject.freeze(LibWrapperPackageError);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {LibWrapperInternalError} from './errors/base_errors.js';\n\n\n\n// game.user.data polyfill, so it can be used before 'ready'\nexport const game_user_data = function(return_null=false) {\n\t// Try game.user.data first\n\tconst orig_game_user_data = game?.user?.data;\n\tif(orig_game_user_data)\n\t\treturn orig_game_user_data;\n\n\t// Grab the user ID\n\tconst userid = game.userId ?? game.data.userId;\n\tif(!userid) {\n\t\tif(return_null)\n\t\t\treturn null;\n\t\tthrow new LibWrapperInternalError(\"Unable to obtain the current user ID\");\n\t}\n\n\t// Find user in game.data.users\n\tconst user_data = game.data.users.find((x) => { return x._id == userid });\n\tif(!user_data) {\n\t\tif(return_null)\n\t\t\treturn null;\n\t\tthrow new LibWrapperInternalError(\"Unable to obtain the current user data object\");\n\t}\n\n\t// Done\n\treturn user_data;\n}\n\n// game.user.can polyfill, so it can be used before 'ready'\nexport const game_user_can = function(action, return_null=false) {\n\t// Try game.user.can first\n\tconst orig_game_user_can = game?.user?.can;\n\tif(orig_game_user_can)\n\t\treturn orig_game_user_can(action);\n\n\t// Obtain game.user.data\n\tconst user_data = game_user_data(return_null);\n\tif(!user_data)\n\t\treturn null;\n\n\t// Check if user is GM\n\tif(user_data.role === 4)\n\t\treturn true;\n\n\t// Check if the action is in the per-user permissions\n\tif(action in user_data.permissions) return user_data.permissions[action];\n\n\t// Otherwise, check the role's permissions\n\tconst game_permissions_str = game.data.settings.find((x) => { return x.key === 'core.permissions'});\n\tif(game_permissions_str?.value) {\n\t\tconst game_permissions = JSON.parse(game_permissions_str.value);\n\n\t\tconst rolePerms = game_permissions[action];\n\t\tif(rolePerms && rolePerms.includes(user_data.role))\n\t\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// game.user.isGM polyfill, so it can be used before 'ready'\nexport const game_user_isGM = function(return_null=false) {\n\t// Try game.user.isGM first\n\tconst orig_game_user_isGM = game?.user?.isGM;\n\tif(orig_game_user_isGM !== undefined)\n\t\treturn orig_game_user_isGM;\n\n\t// Obtain game.user.data\n\tconst user_data = game_user_data(return_null);\n\tif(!user_data)\n\t\treturn null;\n\n\t// Done\n\treturn user_data.role === 4;\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID} from '../consts.js';\nimport {decorate_class_function_names} from '../utils/misc.js';\nimport {game_user_isGM} from '../utils/polyfill.js'\n\n\n// Notify user\nexport class LibWrapperNotifications {\n\tstatic init() {\n\t\tthis.NOTIFICATION_SET = new Set();\n\n\t\t// Seal to prevent accidental modification\n\t\tObject.seal(this);\n\t}\n\n\tstatic get ui_notifications_enabled() {\n\t\t// Make sure we don't accidentally throw a second time, while handling what might be another exception\n\t\ttry {\n\t\t\tif(game_user_isGM()) {\n\t\t\t\tif(!game?.settings?.get(PACKAGE_ID, 'notify-issues-gm'))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(!game?.settings?.get(PACKAGE_ID, 'notify-issues-player'))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\t// We swallow the new error, and assume we want to display errors\n\t\t\tconsole.error(\"libWrapper: Could not decide whether to show notifications or not. Defaulting to 'yes'.\\n\", e);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic _ui(msg, fn) {\n\t\tif(!this.ui_notifications_enabled)\n\t\t\treturn;\n\n\t\t// Check if we've already notified the user of this\n\t\tif(this.NOTIFICATION_SET.has(msg))\n\t\t\treturn;\n\n\t\tthis.NOTIFICATION_SET.add(msg);\n\n\t\t// Notify - ensure that ui.notifications exists as if an error occurs too early it might not be defined yet\n\t\tlet notify = globalThis?.ui?.notifications;\n\t\tif(notify)\n\t\t\tnotify[fn].call(notify, `libWrapper: ${msg}`, {permanent: fn == 'error'});\n\t}\n\n\tstatic ui(msg, fn='error') {\n\t\t// Wait until 'ready' if the error occurs early during load\n\t\tif(!globalThis.game?.ready)\n\t\t\tHooks.once('ready', this._ui.bind(this, msg, fn));\n\t\telse\n\t\t\tthis._ui(msg, fn);\n\t}\n\n\n\tstatic console_ui(ui_msg, console_msg, fn='error', ...vargs) {\n\t\tconsole[fn].call(console, `libWrapper: ${ui_msg}\\n${console_msg}`, ...vargs);\n\n\t\tthis.ui(`${ui_msg} (See JS console)`, fn);\n\t}\n\n\n\tstatic conflict(package_info, other_info, potential, console_msg) {\n\t\tlet other;\n\t\tif(Array.isArray(other_info))\n\t\t\tother = (other_info.length > 1) ? `[${other_info.map((x) => x.id).join(', ')}]` : other_info[0].logString\n\t\telse\n\t\t\tother = other_info.logString;\n\n\t\tthis.console_ui(\n\t\t\tpotential ? `Potential conflict detected between ${package_info.logString} and ${other}.` : `Conflict detected between ${package_info.logString} and ${other}.`,\n\t\t\tconsole_msg,\n\t\t\tpotential ? 'warn' : 'error'\n\t\t);\n\t}\n}\ndecorate_class_function_names(LibWrapperNotifications);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {IS_UNITTEST, DEBUG} from '../../consts.js';\nimport {global_eval} from '../misc.js';\nimport {LibWrapperError} from './base_errors.js';\nimport {LibWrapperNotifications} from '../../ui/notifications.js';\n\n\n// Error listeners for unhandled exceptions\nexport const onUnhandledError = function(event) {\n\t// This is a LibWrapperError exception, and we need to handle it\n\ttry {\n\t\t// We first check whether the cause of the event is an instance of LibWrapperError. Otherwise, we do nothing.\n\t\tconst exc = event.reason ?? event.error ?? event;\n\t\tif(!exc || !(exc instanceof LibWrapperError))\n\t\t\treturn;\n\n\t\t// Notify user of the issue\n\t\tif(exc.ui_msg && exc.notification_fn)\n\t\t\tLibWrapperNotifications.ui(`${exc.ui_msg} (See JS console)`, exc.notification_fn);\n\n\t\t// Trigger 'onUnhandled'\n\t\tif(exc.onUnhandled)\n\t\t\texc.onUnhandled.apply(exc);\n\t}\n\tcatch (e) {\n\t\tconsole.warn('libWrapper: Exception thrown while processing an unhandled exception.', e);\n\t}\n}\n\nexport const init_error_listeners = function() {\n\t// Do nothing inside unit tests\n\tif(IS_UNITTEST)\n\t\treturn;\n\n\t// Javascript native unhandled exception listeners\n\tglobalThis.addEventListener('error', onUnhandledError);\n\tglobalThis.addEventListener('unhandledrejection', onUnhandledError);\n\n\t// Wrap Hooks._call to intercept unhandled exceptions during hooks\n\t// We don't use libWrapper itself here as we can guarantee we come first (well, before any libWrapper wrapper) and we want to avoid polluting the callstack of every single hook.\n\t// Otherwise users might think libWrapper is causing failures, when they're actually the fault of another package.\n\t// We try to patch the existing method. If anything fails, we just alert the user and skip this section.\n\ttry {\n\t\t// Patch original method\n\t\tconst orig = '() => function ' + Hooks._call.toString();\n\t\tconst patched = orig.replace(/^( *).*catch\\((.*)\\)\\s*{/img, '$&\\n$1  globalThis.libWrapper.onUnhandledError($2);');\n\t\tif(orig === patched)\n\t\t\tthrow `Could not patch 'Hooks._call' method:\\n${orig}`;\n\t\tif(DEBUG)\n\t\t\tconsole.log(`Patched Hooks._call: ${patched}`);\n\n\t\tconst patched_fn = global_eval(patched)?.();\n\t\tif(typeof patched_fn !== 'function')\n\t\t\tthrow `Evaluation of patched 'Hooks._call' method did not return a function:\\nPatched Method: ${patched}\\nReturned: ${patched_fn}`;\n\n\t\tHooks._call = patched_fn;\n\t}\n\tcatch(e) {\n\t\t// Handle a possible error gracefully\n\t\tLibWrapperNotifications.console_ui(\n\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\"Could not setup 'Hooks._call' wrapper.\\n\",\n\t\t\t'warn',\n\t\t\te\n\t\t);\n\t}\n\n\t// Wrap Application.prototype._render to intercept unhandled exceptions when rendering Applications\n\ttry {\n\t\tlibWrapper.register('lib-wrapper', 'Application.prototype._render', function(wrapped, ...args) {\n\t\t\treturn wrapped(...args).catch(err => {\n\t\t\t\tonUnhandledError(err);\n\t\t\t\tthrow err;\n\t\t\t});\n\t\t}, 'WRAPPER', {perf_mode: 'FAST'});\n\t}\n\tcatch(e) {\n\t\t// Handle a possible error gracefully\n\t\tLibWrapperNotifications.console_ui(\n\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\"Could not setup 'Application.prototype._render' wrapper.\\n\",\n\t\t\t'warn',\n\t\t\te\n\t\t);\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID, IS_UNITTEST} from '../consts.js';\nimport {LibWrapperNotifications} from './notifications.js';\nimport {game_user_can} from '../utils/polyfill.js'\n\nexport class LibWrapperStats {\n\tstatic _collect_stats() {\n\t\t// We do this in a try-catch in case future Foundry versions break this code, it won't completely break libWrapper\n\t\ttry {\n\t\t\treturn game_user_can('SETTINGS_MODIFY');\n\t\t}\n\t\tcatch(e) {\n\t\t\tif(IS_UNITTEST)\n\t\t\t\tthrow e;\n\n\t\t\tLibWrapperNotifications.console_ui(\n\t\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\t\"Could not read user permissions during initialization.\\n\",\n\t\t\t\t'warn',\n\t\t\t\te\n\t\t\t);\n\n\t\t\t// Default to 'true' on error\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tstatic init() {\n\t\tthis.collect_stats = this._collect_stats();\n\n\t\t// If we got this far, we're going to be collecting statistics, so initialize the containers\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tthis.PACKAGES  = new Set();\n\t\tthis.CONFLICTS = new Map();\n\n\t\t// Seal to prevent accidental modification\n\t\tObject.seal(this);\n\t}\n\n\tstatic register_package(package_info) {\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tif(package_info.id == PACKAGE_ID)\n\t\t\treturn;\n\n\t\tthis.PACKAGES.add(package_info.key);\n\t}\n\n\tstatic register_conflict(package_info, other_info, wrapper, ignored) {\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\t// Grab conflict data from storage, or create it if this is a new conflict\n\t\tconst key = `${package_info.key}/${other_info.key}`;\n\n\t\tlet data = this.CONFLICTS.get(key);\n\t\tif(!data) {\n\t\t\tdata = {\n\t\t\t\tcount: 0,\n\t\t\t\tignored: 0,\n\t\t\t\tpackage_info: package_info,\n\t\t\t\tother_info: other_info,\n\t\t\t\ttargets: new Map()\n\t\t\t};\n\t\t\tthis.CONFLICTS.set(key, data);\n\t\t}\n\n\t\tconst target = wrapper.name;\n\t\tlet target_data = data.targets.get(target);\n\t\tif(!target_data) {\n\t\t\ttarget_data = {\n\t\t\t\tcount: 0,\n\t\t\t\tignored: 0\n\t\t\t}\n\t\t\tdata.targets.set(target, target_data);\n\t\t}\n\n\t\t// Increment the conflict counter\n\t\tif(!ignored) {\n\t\t\tdata.count++;\n\t\t\ttarget_data.count++;\n\t\t}\n\t\telse {\n\t\t\tdata.ignored++;\n\t\t\ttarget_data.ignored++;\n\t\t}\n\t}\n\n\tstatic get conflicts() {\n\t\treturn this.CONFLICTS;\n\t}\n\n\tstatic get packages() {\n\t\treturn this.PACKAGES;\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {DEBUG} from '../consts.js';\nimport {LibWrapperInternalError} from '../utils/errors/base_errors.js';\nimport {LibWrapperStats} from './stats.js';\nimport {PackageInfo} from '../utils/package_info.js';\n\n\nclass IgnoredConflictEntry {\n\tconstructor(ignore_infos, targets, ignore_errors) {\n\t\t// Packages to ignore\n\t\tthis.ignore_infos = new Set(ignore_infos.map((x) => x.key));\n\n\t\t// Targets to ignore\n\t\tthis.targets = new Set(targets);\n\n\t\t// Whether this ignore also should match errors, and not just warnings\n\t\tthis.ignore_errors = ignore_errors;\n\n\t\t// Done\n\t\tObject.seal(this);\n\t}\n\n\tis_ignored(package_info, wrapper, is_warning) {\n\t\t// Skip if this is an error and we aren't set to ignore errors\n\t\tif(!is_warning && !this.ignore_errors)\n\t\t\treturn false;\n\n\t\t// Search for a matching package\n\t\tconst found_package = this.ignore_infos.has(package_info.key);\n\t\tif(!found_package)\n\t\t\treturn false;\n\n\t\t// Find matching target\n\t\tconst found_target = wrapper.names.find((name) => this.targets.has(name));\n\t\treturn (found_target !== undefined);\n\t}\n}\n\nexport class LibWrapperConflicts {\n\tstatic init() {\n\t\tthis.IGNORED = new Map();\n\n\t\t// Seal to prevent accidental modification\n\t\tObject.seal(this);\n\t}\n\n\tstatic register_ignore(package_info, ignore_infos, targets, is_warning) {\n\t\t// Create IgnoredConflictEntry\n\t\tconst entry = new IgnoredConflictEntry(ignore_infos, targets, is_warning);\n\n\t\t// Get the existing list of ignore entries for this package, or create a new one and add it to the map\n\t\tconst key = package_info.key;\n\t\tlet ignore_entries = this.IGNORED.get(key);\n\t\tif(!ignore_entries) {\n\t\t\tignore_entries = [];\n\t\t\tthis.IGNORED.set(key, ignore_entries);\n\t\t}\n\n\t\t// Add new entry to list\n\t\tignore_entries.push(entry);\n\t}\n\n\tstatic clear_ignores() {\n\t\tthis.IGNORED.clear();\n\t}\n\n\tstatic _is_ignored_oneway(package_info, other_info, wrapper, is_warning) {\n\t\t// Get the existing list of ignore entries for this package\n\t\tconst key = package_info.key;\n\t\tconst ignore_entries = this.IGNORED.get(key);\n\t\tif(!ignore_entries)\n\t\t\treturn false;\n\n\t\t// Check if any of the entries causes this conflict to be ignored\n\t\tfor(const entry of ignore_entries) {\n\t\t\tif(entry.is_ignored(other_info, wrapper, is_warning))\n\t\t\t\treturn true;\n\t\t}\n\n\t\t// Otherwise, it's not ignored\n\t\treturn false;\n\t}\n\n\tstatic _is_ignored(package_info, other_info, wrapper, is_warning) {\n\t\treturn this._is_ignored_oneway(package_info, other_info, wrapper, is_warning) ||\n\t\t       this._is_ignored_oneway(other_info, package_info, wrapper, is_warning);\n\t}\n\n\tstatic register_conflict(package_info, other_info, wrapper, target, is_warning) {\n\t\t// Ignore an empty conflict\n\t\tif(!other_info)\n\t\t\treturn false;\n\n\t\t// Convert from array if necessary\n\t\tif(Array.isArray(other_info)) {\n\t\t\tlet notify = false;\n\t\t\tother_info.forEach((other) => {\n\t\t\t\tnotify |= this.register_conflict(package_info, other, wrapper, target, is_warning);\n\t\t\t});\n\t\t\treturn notify;\n\t\t}\n\n\t\t// Sanity checks #2\n\t\tif(package_info.constructor !== PackageInfo)\n\t\t\tthrow new LibWrapperInternalError(`LibWrapperConflicts.register_conflict: 'package_info' must be a PackageInfo object, but got '${package_info}'.`);\n\n\t\tif(other_info.constructor !== PackageInfo)\n\t\t\tthrow new LibWrapperInternalError(`LibWrapperConflicts.register_conflict: 'other_info' must be a PackageInfo object, but got '${other_info}'.`);\n\n\t\t// Note: Not checked because of cyclic dependency\n\t\t//if(wrapper.constructor != Wrapper)\n\t\t//\tthrow new LibWrapperInternalError(`LibWrapperConflicts.register_conflict: 'wrapper' must be a Wrapper object, but got '${wrapper}'.`);\n\n\t\tif(target != null && typeof target !== 'string')\n\t\t\tthrow new LibWrapperInternalError(`LibWrapperConflicts.register_conflict: 'target' must be a string, or null, but got '${target}'.`);\n\n\t\tif(typeof is_warning !== 'boolean')\n\t\t\tthrow new LibWrapperInternalError(`LibWrapperConflicts.register_conflict: 'is_warning' must be a boolean, but got '${is_warning}'.`);\n\n\n\t\t// We first check if this conflict is ignored\n\t\tlet ignored = false;\n\n\t\tif(!ignored && this._is_ignored(package_info, other_info, wrapper, is_warning)) {\n\t\t\tignored = true;\n\t\t\tif(DEBUG)\n\t\t\t\tconsole.debug(`Conflict between ${package_info.logString} and ${other_info.logString} over '${wrapper.name}' ignored through 'ignore_conflicts' API.`);\n\t\t}\n\n\t\t// We then notify everyone that a conflict was just detected. This hook being handled will prevent us from registering the package conflict\n\t\tif(!ignored && Hooks.call('libWrapper.ConflictDetected', package_info.id, other_info.id, target, wrapper.frozen_names) === false) {\n\t\t\tignored = true;\n\t\t\tif(DEBUG)\n\t\t\t\tconsole.debug(`Conflict between ${package_info.logString} and ${other_info.logString} over '${wrapper.name}' ignored, as 'libWrapper.ConflictDetected' hook returned false.`);\n\t\t}\n\n\t\t// We now register the conflict with LibWrapperStats\n\t\tLibWrapperStats.register_conflict(package_info, other_info, wrapper, ignored);\n\n\t\t// Done\n\t\treturn !ignored;\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {LibWrapperError} from './base_errors.js';\nimport {PackageInfo} from '../package_info.js';\nimport {LibWrapperConflicts} from '../../ui/conflicts.js';\n\n\n// Already Overridden Error\nexport class LibWrapperAlreadyOverriddenError extends LibWrapperError {\n\tconstructor(package_info, conflicting_info, wrapper, target, ...args) {\n\t\tif(package_info?.constructor !== PackageInfo)\n\t\t\tpackage_info = new PackageInfo(package_info);\n\n\t\tif(conflicting_info?.constructor !== PackageInfo)\n\t\t\tconflicting_info = new PackageInfo(conflicting_info);\n\n\t\tsuper(\n\t\t\t`Conflict detected between ${package_info.logString} and ${conflicting_info.logString}.`,\n\t\t\t`Failed to wrap '${target}' for ${package_info.logString} with type OVERRIDE. An OVERRIDE wrapper for the same method has already been registered by ${conflicting_info.logString}.`,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.package_info = package_info;\n\t\tthis.conflicting_info = conflicting_info;\n\t\tthis.target = target;\n\t\tthis._wrapper = wrapper;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() { return this.package_id; }\n\n\t/**\n\t * Returns the conflicting package ID\n\t */\n\tget conflicting_id() { return this.conflicting_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the conflicting package ID\n\t */\n\tget conflicting_module() { return this.conflicting_id; }\n\n\t/**\n\t * Called if this error is unhandled\n\t */\n\tonUnhandled() {\n\t\tsuper.onUnhandled();\n\n\t\tLibWrapperConflicts.register_conflict(this.package_info, this.conflicting_info, this._wrapper, this.target, false);\n\t}\n}\nObject.freeze(LibWrapperAlreadyOverriddenError);\n\n\n\n// Invalid Wrapper Chain Error\nexport class LibWrapperInvalidWrapperChainError extends LibWrapperError {\n\tconstructor(wrapper, package_info, console_msg, ...args) {\n\t\tif(package_info?.constructor !== PackageInfo)\n\t\t\tpackage_info = new PackageInfo(package_info);\n\n\t\tsuper(\n\t\t\t`Error detected in '${package_info.logString}'.`,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis._wrapper = wrapper;\n\t\tthis.package_info = package_info;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() {\n\t\treturn this.package_id;\n\t}\n}\nObject.freeze(LibWrapperInvalidWrapperChainError);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID, PROPERTIES_CONFIGURABLE, TYPES, DEBUG, PERF_MODES} from '../consts.js';\nimport {decorate_name, set_function_name, decorate_class_function_names} from '../utils/misc.js';\nimport {PackageInfo} from '../utils/package_info.js';\n\nimport {LibWrapperInternalError, LibWrapperPackageError} from '../utils/errors/base_errors.js';\nimport {LibWrapperInvalidWrapperChainError} from '../utils/errors/api_errors.js';\n\nimport {LibWrapperNotifications} from '../ui/notifications.js';\nimport {LibWrapperStats} from '../ui/stats.js';\nimport {LibWrapperConflicts} from '../ui/conflicts.js';\n\n\n\n// Wrapper class - this class is responsible for the actual wrapping\nexport class Wrapper {\n\t// Names\n\tget name() {\n\t\treturn this.names[0];\n\t}\n\n\tget frozen_names() {\n\t\tObject.freeze(this.names);\n\t\treturn this.names;\n\t}\n\n\t_add_name(name) {\n\t\tif(!this.names.includes(name)) {\n\t\t\t// Note: 'this._names' might be frozen, assuming the 'this.frozen_names' getter has ever been used, in which case we need to clone it.\n\t\t\tif(Object.isFrozen(this.names))\n\t\t\t\tthis.names = this.names.slice();\n\n\t\t\tthis.names.push(name);\n\t\t}\n\t}\n\n\n\t// Callstack\n\t_callstack_name(nm, arg1=this.name) {\n\t\treturn decorate_name(arg1, nm);\n\t}\n\n\n\t// Constructor\n\tconstructor (obj, fn_name, name=undefined, package_info=undefined) {\n\t\t// Basic instance variables\n\t\tthis.fn_name = fn_name;\n\t\tthis.object  = obj;\n\n\t\t// Validate whether we can wrap this object\n\t\tlet descriptor = Object.getOwnPropertyDescriptor(obj, fn_name);\n\n\t\tif(descriptor) {\n\t\t\tif(descriptor.get?._lib_wrapper) {\n\t\t\t\tconst wrapper = descriptor.get?._lib_wrapper;\n\n\t\t\t\tif(!(wrapper instanceof this.constructor))\n\t\t\t\t\tthrow new LibWrapperInternalError(`libWrapper: '${name}' cannot be wrapped, the descriptor already has a wrapper, but of an unexpected class ('${wrapper.constructor.name}' vs '${this.constructor.name}').`);\n\n\t\t\t\twrapper._add_name(name);\n\n\t\t\t\treturn wrapper;\n\t\t\t}\n\n\t\t\tif(descriptor.configurable === false) {\n\t\t\t\tthrow new LibWrapperPackageError(`libWrapper: '${name}' cannot be wrapped, the corresponding descriptor has 'configurable=false'.`, package_info);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(descriptor.get) {\n\t\t\t\t\tthis.is_property = true;\n\t\t\t\t\tthis._wrapped_getter = descriptor.get;\n\t\t\t\t\tthis._wrapped_setter = descriptor.set;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.is_property = false;\n\t\t\t\t\tthis._wrapped = descriptor.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdescriptor = this._get_inherited_descriptor();\n\n\t\t\tif(!descriptor)\n\t\t\t\tthrow new LibWrapperPackageError(`libWrapper: Can't wrap '${name}', target does not exist or could not be found.`, package_info);\n\n\t\t\tconst wrapper = descriptor.get?._lib_wrapper;\n\n\t\t\tif(wrapper) {\n\t\t\t\tthis.is_property = wrapper.is_property;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(descriptor.get ?? descriptor.set)\n\t\t\t\t\tthis.is_property = true;\n\t\t\t\telse\n\t\t\t\t\tthis.is_property = false;\n\t\t\t}\n\t\t}\n\n\t\t// Setup instance variables\n\t\tthis.names = [];\n\n\t\tthis.getter_data = [];\n\t\tthis._getter_data_id = 0;\n\t\tif(this.is_property) {\n\t\t\tthis.setter_data = [];\n\t\t\tthis._setter_data_id = 0;\n\t\t}\n\n\t\tthis.active  = false;\n\n\t\tthis._outstanding_wrappers = 0;\n\t\tthis._current_handler_id = 0;\n\n\t\tif(!this.is_property) {\n\t\t\tthis._pending_wrapped_calls = [];\n\t\t\tthis._pending_wrapped_calls_cnt = 0;\n\t\t}\n\n\t\tthis.update_use_static_dispatch();\n\n\t\t// Add name\n\t\tif(!name)\n\t\t\tname = fn_name;\n\t\tthis._add_name(name);\n\n\t\t// Do actual wrapping\n\t\tthis._wrap();\n\t}\n\n\n\t// Handler\n\t_get_handler() {\n\t\t// Return the cached handler, if it is still valid\n\t\tconst handler_id = this._current_handler_id;\n\t\tif(handler_id === this._cached_handler_id)\n\t\t\treturn this._cached_handler;\n\n\t\t// Create a handler function\n\t\tconst _this = this;\n\t\tconst handler_nm = this._callstack_name(handler_id);\n\t\tconst wrapped = this._wrapped ?? null; // we explicitly convert undefined to null here, to force a inheritance chain search when calling get_wrapped\n\n\t\t// We use a trick here to be able to convince the browser to name the method the way we want it\n\t\tconst obj = {\n\t\t\t[handler_nm]: function(...args) {\n\t\t\t\tconst is_static_dispatch = _this.use_static_dispatch;\n\n\t\t\t\t// Check if we should skip wrappers\n\t\t\t\tif(_this.should_skip_wrappers(this, handler_id, is_static_dispatch)) {\n\t\t\t\t\treturn _this.get_wrapped(this, false, wrapped).apply(this, args);\n\t\t\t\t}\n\t\t\t\t// Otherwise, trigger the wrapper dispatch chain\n\t\t\t\telse {\n\t\t\t\t\t// Trigger the desired dispatch chain - dynamic or static\n\t\t\t\t\tif(is_static_dispatch)\n\t\t\t\t\t\treturn _this.get_static_dispatch_chain(this).apply(this, args);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn _this.call_wrapper(null, this, ...args);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t['toString']: function () {\n\t\t\t\treturn _this.get_wrapped(this).toString();\n\t\t\t}\n\t\t};\n\t\tconst handler = obj[handler_nm];\n\t\thandler.toString = obj['toString'];\n\n\t\t// Cache handler\n\t\tthis._cached_handler = handler;\n\t\tthis._cached_handler_id = handler_id;\n\n\t\t// Done\n\t\treturn handler;\n\t}\n\n\tget_static_dispatch_chain(obj) {\n\t\tconst fn_data_id = this._getter_data_id;\n\t\tlet dispatch_chain = null;\n\n\t\t// Use the cached dispatch chain, if still valid\n\t\tif(fn_data_id === this._cached_static_dispatch_chain_id && obj === this._cached_static_dispatch_chain_obj) {\n\t\t\tdispatch_chain = this._cached_static_dispatch_chain;\n\t\t}\n\t\t// Otherwise, generate a new static dispatch chain\n\t\telse {\n\t\t\tconst _init_dispatch_chain = () => {\n\t\t\t\tdispatch_chain = this.call_wrapped.bind(this, /*state=*/ null, obj);\n\t\t\t};\n\n\t\t\t// Walk wrappers in reverse order\n\t\t\tconst fn_data = this.get_fn_data(false);\n\t\t\tfor(let i = fn_data.length-1; i >= 0; i--) {\n\t\t\t\tconst data = fn_data[i];\n\t\t\t\tconst fn = data.fn;\n\n\t\t\t\t// OVERRIDE type will usually not continue the chain\n\t\t\t\tif(!data.chain)\n\t\t\t\t\tdispatch_chain = fn.bind(obj);\n\t\t\t\t// Else, bind the wrapper\n\t\t\t\telse {\n\t\t\t\t\tif(!dispatch_chain)\n\t\t\t\t\t\t_init_dispatch_chain();\n\n\t\t\t\t\tdispatch_chain = fn.bind(obj, dispatch_chain);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!dispatch_chain)\n\t\t\t\t_init_dispatch_chain();\n\n\t\t\t// Cache static dispatch chain\n\t\t\tthis._cached_static_dispatch_chain_obj = obj;\n\t\t\tthis._cached_static_dispatch_chain_id  = fn_data_id;\n\t\t\tthis._cached_static_dispatch_chain     = dispatch_chain;\n\t\t}\n\n\t\t// Done\n\t\treturn dispatch_chain;\n\t}\n\n\tshould_skip_wrappers(obj, handler_id, is_static_dispatch) {\n\t\t// We don't need to skip wrappers if the handler is still valid\n\t\tif(handler_id == this._current_handler_id)\n\t\t\treturn false;\n\n\t\t// Sanity check\n\t\tif(handler_id > this._current_handler_id)\n\t\t\tthrow new LibWrapperInternalError(`Unreachable: handler_id=${handler_id} > this._current_handler_id=${this._current_handler_id}`);\n\n\t\t// Find pending calls that match this object - if any is found, skip wrappers\n\t\tif(!this.is_property) {\n\t\t\t// Check if there's any pending wrapped calls\n\t\t\tif(this._pending_wrapped_calls_cnt <= 0)\n\t\t\t\treturn false;\n\n\t\t\t// Check if our object exists in the pending wrapped calls\n\t\t\tif(!is_static_dispatch) {\n\t\t\t\tconst pend_i = this._pending_wrapped_calls.indexOf(obj);\n\t\t\t\tif(pend_i < 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tskip_existing_handlers() {\n\t\tthis._current_handler_id++;\n\t}\n\n\t_calc_use_static_dispatch() {\n\t\t// Do all the wrappers in fn_data specify the same, explicit, performance mode wish?\n\t\tconst fn_data = this.get_fn_data(false);\n\n\t\tlet perf_mode = undefined;\n\t\tfor(const data of fn_data) {\n\t\t\tif(!data.perf_mode)\n\t\t\t\tcontinue;\n\n\t\t\tif(perf_mode === undefined) {\n\t\t\t\tperf_mode = data.perf_mode;\n\t\t\t}\n\t\t\telse if(perf_mode !== data.perf_mode) {\n\t\t\t\tperf_mode = PERF_MODES.AUTO;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(perf_mode === PERF_MODES.FAST)\n\t\t\treturn true;\n\t\telse if(perf_mode === PERF_MODES.SAFE)\n\t\t\treturn false;\n\t\telse /* PERF_MODES.AUTO */ {\n\t\t\t// Default to static dispatch in user-enabled high performance mode\n\t\t\tif(game?.settings?.get(PACKAGE_ID, 'high-performance-mode'))\n\t\t\t\treturn true;\n\n\t\t\t// Finally, default to false\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tupdate_use_static_dispatch() {\n\t\tthis.use_static_dispatch = this._calc_use_static_dispatch();\n\t}\n\n\n\t// Wrap/unwrap logic\n\t_wrap() {\n\t\tif(this.active)\n\t\t\treturn;\n\n\t\t// Setup setter/getter\n\t\t// We use a trick here to be able to convince the browser to name the method the way we want it\n\t\tconst getter_nm = this._callstack_name('getter');\n\t\tconst setter_nm = this._callstack_name('setter');\n\t\tlet obj;\n\n\t\tif(!this.is_property) {\n\t\t\tconst _this = this;\n\n\t\t\t// Setup setter / getter\n\t\t\tobj = {\n\t\t\t\t[getter_nm]: () => _this._get_handler(),\n\n\t\t\t\t[setter_nm]: function(value) {\n\t\t\t\t\treturn _this.set_nonproperty(value, this);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Setup setter / getter\n\t\t\tconst _this = this;\n\n\t\t\tobj = {\n\t\t\t\t[getter_nm]: function(...args) {\n\t\t\t\t\treturn _this.call_wrapper(null, this, ...args);\n\t\t\t\t},\n\n\t\t\t\t[setter_nm]: function(...args) {\n\t\t\t\t\treturn _this.call_wrapper({setter: true}, this, ...args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst getter = obj[getter_nm];\n\t\tconst setter = obj[setter_nm];\n\n\t\t// Store a reference to this in the getter so that we can support 'singleton'-like functionality\n\t\tgetter._lib_wrapper = this;\n\n\t\t// Define a property with a getter/setter\n\t\tObject.defineProperty(this.object, this.fn_name, {\n\t\t\tget: getter,\n\t\t\tset: setter,\n\t\t\tconfigurable: PROPERTIES_CONFIGURABLE\n\t\t});\n\n\t\tthis.active = true;\n\n\t\tconsole.debug(`libWrapper: Wrapped '${this.name}'.`);\n\t}\n\n\tunwrap() {\n\t\tif(!this.active)\n\t\t\treturn;\n\n\t\tif(!PROPERTIES_CONFIGURABLE)\n\t\t\tthrow new LibWrapperInternalError('libWrapper: Cannot unwrap when PROPERTIES_CONFIGURABLE==false');\n\n\n\t\t// Remove the property\n\t\tdelete this.object[this.fn_name];\n\n\t\tif(this.is_property) {\n\t\t\tObject.defineProperty(this.object, this.fn_name, {\n\t\t\t\tget: this._wrapped_getter,\n\t\t\t\tset: this._wrapped_setter,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.object[this.fn_name] = this._wrapped;\n\t\t}\n\n\n\t\t// Done\n\t\tthis.active = false;\n\n\t\tconsole.debug(`libWrapper: Unwrapped '${this.name}'.`);\n\t}\n\n\n\n\t// Utilities related to getting the wrapped value\n\t_get_inherited_descriptor() {\n\t\tlet iObj = Object.getPrototypeOf(this.object);\n\n\t\twhile(iObj) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(iObj, this.fn_name);\n\t\t\tif(descriptor)\n\t\t\t\treturn descriptor;\n\n\t\t\tiObj = Object.getPrototypeOf(iObj);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget_wrapped(obj, setter=false, wrapped=undefined) {\n\t\tlet result;\n\n\t\t// A non-undefined \"wrapped\" parameter is taken as-is\n\t\tif(wrapped !== undefined)\n\t\t\tresult = wrapped;\n\t\t// Otherwise we grab what is currently wrapped\n\t\telse if(this.is_property)\n\t\t\tresult = setter ? this._wrapped_setter : this._wrapped_getter;\n\t\telse\n\t\t\tresult = this._wrapped;\n\n\t\t// We convert 'null' to undefined. This means passing parameter 'wrapped==null' forces an inheritance chain search\n\t\tif(result === null)\n\t\t\tresult = undefined;\n\n\t\t// If this wrapper is 'empty', we need to search up the inheritance hierarchy for the return value\n\t\tif(result === undefined) {\n\t\t\tconst descriptor = this._get_inherited_descriptor();\n\n\t\t\tif(descriptor) {\n\t\t\t\tif(this.is_property) {\n\t\t\t\t\tif(!descriptor.get && !descriptor.set)\n\t\t\t\t\t\tthrow new LibWrapperInternalError(`This wrapper is set up to wrap a property, but the inherited descriptor is a method.`);\n\n\t\t\t\t\tif(setter)\n\t\t\t\t\t\tresult = descriptor.set;\n\t\t\t\t\telse\n\t\t\t\t\t\tresult = descriptor.get;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = descriptor.value ?? descriptor.get.apply(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Done\n\t\tif(result === undefined)\n\t\t\tconsole.warn(`libWrapper: There is no wrapped method for '${this.name}', returning 'undefined'.`);\n\n\t\treturn result;\n\t}\n\n\n\n\t// Calling the wrapped method\n\tcall_wrapped(state, obj, ...args) {\n\t\t// Keep track of call state\n\t\tif(state)\n\t\t\tthis._call_wrapper_update_state(state);\n\n\t\t// Load necessary state\n\t\tconst is_setter = state?.setter ?? false;\n\t\tconst is_dynamic_dispatch = (!!state);\n\n\t\t// If necessary, set this wrapped call as pending\n\t\tlet pend = undefined;\n\t\tif(!this.is_property) {\n\t\t\tthis._pending_wrapped_calls_cnt++;\n\n\t\t\tif(is_dynamic_dispatch) {\n\t\t\t\tpend = obj;\n\t\t\t\tthis._pending_wrapped_calls.push(pend);\n\t\t\t}\n\t\t}\n\n\t\t// Try-catch block to handle normal exception flow\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\tconst wrapped = this.get_wrapped(this.object, is_setter);\n\t\t\tresult = wrapped?.apply(obj, args);\n\t\t}\n\t\tcatch(e) {\n\t\t\tif(!this.is_property)\n\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\n\t\t\tthrow e;\n\t\t}\n\n\t\t// We only need to keep track of pending calls when we're not wrapping a property\n\t\tif(this.is_property)\n\t\t\treturn result;\n\n\t\t// If the result is a Promise, then we must wait until it fulfills before cleaning up.\n\t\t// Per the JS spec, the only way to detect a Promise (since Promises can be polyfilled, extended, wrapped, etc) is to look for the 'then' method.\n\t\t// Anything with a 'then' function is technically a Promise. This leaves a path for false-positives, but I don't see a way to avoid this.\n\t\tif(typeof result?.then === 'function') {\n\t\t\tresult = result.then(\n\t\t\t\t// onResolved\n\t\t\t\tv => {\n\t\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t\t\t\treturn v;\n\t\t\t\t},\n\t\t\t\t// onRejected\n\t\t\t\te => {\n\t\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\t// Otherwise, we can immediately cleanup.\n\t\telse {\n\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_cleanup_call_wrapped(pend, is_dynamic_dispatch) {\n\t\tif(!this._pending_wrapped_calls_cnt)\n\t\t\tthrow new LibWrapperInternalError(`this._pending_wrapped_calls_cnt=${this._pending_wrapped_calls_cnt} should be unreachable at this point.`);\n\t\tthis._pending_wrapped_calls_cnt--;\n\n\t\tif(is_dynamic_dispatch) {\n\t\t\tconst pend_i = this._pending_wrapped_calls.indexOf(pend);\n\t\t\tif(pend_i < 0)\n\t\t\t\tthrow new LibWrapperInternalError(`Could not find 'pend' inside 'this._pending_wrapped_calls'.`);\n\n\t\t\tthis._pending_wrapped_calls.splice(pend_i, 1);\n\t\t}\n\t}\n\n\n\n\t// Main call wrapper logic\n\tcall_wrapper(state, obj, ...args) {\n\t\t// Keep track of call state\n\t\tif(state)\n\t\t\tthis._call_wrapper_update_state(state);\n\n\t\t// Set up basic information about this wrapper\n\t\tconst index = state?.index ?? 0;\n\t\tconst is_setter = state?.setter ?? false;\n\t\tconst fn_data = state?.fn_data ?? this.get_fn_data(is_setter);\n\n\t\t// Grab the next function data from the function data array\n\t\tconst data = fn_data[index];\n\n\t\t// If no methods exist, then finish the chain\n\t\tif(!data) {\n\t\t\tif(fn_data.length > 0)\n\t\t\t\tthrow new LibWrapperInternalError(`Must not have 'data===${data}' when 'fn_data.length==${fn_data.length}'.`);\n\n\t\t\t// There are no wrappers, return the wrapped value.\n\t\t\treturn this.call_wrapped(null, obj, ...args);\n\t\t}\n\n\t\t// Grab wrapper function from function data object\n\t\tconst fn = data.fn;\n\n\t\t// OVERRIDE type will usually not continue the chain\n\t\tif(!data.chain) {\n\t\t\t// Call next method in the chain\n\t\t\treturn fn.apply(obj, args);\n\t\t}\n\n\t\t// Get next index\n\t\tconst next_index = index + 1;\n\t\tconst is_last = (next_index >= fn_data.length);\n\n\t\t// Prepare the continuation of the chain\n\t\tconst next_state = {\n\t\t\tindex    : next_index,\n\t\t\tcalled   : false,\n\t\t\tvalid    : true,\n\t\t\tsetter   : is_setter,\n\t\t\tprev_data: data,\n\t\t\tfn_data  : fn_data\n\t\t};\n\n\t\t// Create the next wrapper function\n\t\tconst next_fn = is_last ? this.call_wrapped.bind(this, next_state, obj) : this.call_wrapper.bind(this, next_state, obj);\n\t\tthis._outstanding_wrappers++;\n\n\t\t// Try-catch block to handle normal exception flow\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\t// Call next method in the chain\n\t\t\tresult = fn.call(obj, next_fn, ...args);\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn this._cleanup_call_wrapper_thrown(next_state, e);\n\t\t}\n\n\t\t// If the result is a Promise, then we must wait until it fulfills before cleaning up.\n\t\t// Per the JS spec, the only way to detect a Promise (since Promises can be polyfilled, extended, wrapped, etc) is to look for the 'then' method.\n\t\t// Anything with a 'then' function is technically a Promise. This leaves a path for false-positives, but I don't see a way to avoid this.\n\t\tif(typeof result?.then === 'function') {\n\t\t\tresult = result.then(\n\t\t\t\t// onResolved\n\t\t\t\tv => this._cleanup_call_wrapper(v, next_state, data, fn_data, next_fn, obj, args),\n\t\t\t\t// onRejected\n\t\t\t\te => this._cleanup_call_wrapper_thrown(next_state, e)\n\t\t\t);\n\t\t}\n\t\t// Otherwise, we can immediately cleanup.\n\t\telse {\n\t\t\tresult = this._cleanup_call_wrapper(result, next_state, data, fn_data, next_fn, obj, args);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_call_wrapper_update_state(state) {\n\t\t// Keep track of call state\n\t\tif('valid' in state && !state.valid) {\n\t\t\tthrow new LibWrapperInvalidWrapperChainError(\n\t\t\t\tthis,\n\t\t\t\tstate.prev_data?.package_info,\n\t\t\t\t`This wrapper function for '${this.name}' is no longer valid, and must not be called.`\n\t\t\t);\n\t\t}\n\n\t\t// Mark this state object as called\n\t\tstate.called = true;\n\t}\n\n\t_invalidate_state(state) {\n\t\tstate.valid = false;\n\n\t\tthis._outstanding_wrappers--;\n\t\tif(this._outstanding_wrappers < 0)\n\t\t\tthrow new LibWrapperInternalError(`Outstanding wrappers = ${this._outstanding_wrappers}, should never fall below 0.`);\n\t}\n\n\t_cleanup_call_wrapper_thrown(next_state, e) {\n\t\t// An exception/rejection causes invalidation of next_state\n\t\tthis._invalidate_state(next_state);\n\n\t\t// Re-throw\n\t\tthrow e;\n\t}\n\n\t_cleanup_call_wrapper(result, next_state, data, fn_data, next_fn, obj, args) {\n\t\t// Try-finally to ensure we invalidate the wrapper even if this logic fails\n\t\ttry {\n\t\t\t// Check that next_fn was called\n\t\t\tif(!next_state.called) {\n\t\t\t\t// We need to collect affected package information if we're collecting statistics, or we haven't warned the user of this conflict yet.\n\t\t\t\tlet collect_affected = (!data.warned_conflict || LibWrapperStats.collect_stats);\n\t\t\t\tlet affectedPackages = null;\n\t\t\t\tlet is_last_wrapper = false;\n\n\t\t\t\tif(collect_affected) {\n\t\t\t\t\taffectedPackages = fn_data.slice(next_state.index).filter((x) => {\n\t\t\t\t\t\treturn !x.package_info.equals(data.package_info);\n\t\t\t\t\t}).map((x) => {\n\t\t\t\t\t\treturn x.package_info;\n\t\t\t\t\t});\n\n\t\t\t\t\tis_last_wrapper = (affectedPackages.length == 0);\n\n\t\t\t\t\tif(affectedPackages.length > 0)\n\t\t\t\t\t\tLibWrapperConflicts.register_conflict(data.package_info, affectedPackages, this, null, true);\n\t\t\t\t}\n\n\t\t\t\t// WRAPPER-type functions that do this are breaking an API requirement, as such we need to be loud about this.\n\t\t\t\t// As a \"punishment\" of sorts, we forcefully unregister them and ignore whatever they did.\n\t\t\t\tif(data.type == TYPES.WRAPPER) {\n\t\t\t\t\tLibWrapperNotifications.console_ui(\n\t\t\t\t\t\t`Error detected in ${data.package_info.logString}.`,\n\t\t\t\t\t\t`The wrapper for '${data.target}' registered by ${data.package_info.logString} with type WRAPPER did not chain the call to the next wrapper, which breaks a libWrapper API requirement. This wrapper will be unregistered.`,\n\t\t\t\t\t\t'error'\n\t\t\t\t\t);\n\n\t\t\t\t\tglobalThis.libWrapper.unregister(data.package_info.id, data.target);\n\n\t\t\t\t\t// Manually chain to the next wrapper if there are more in the chain\n\t\t\t\t\tif(!is_last_wrapper)\n\t\t\t\t\t\tresult = next_fn.apply(obj, args);\n\t\t\t\t}\n\n\t\t\t\t// Other TYPES get a generic 'conflict' message\n\t\t\t\telse if(!data.warned_conflict && !is_last_wrapper) {\n\t\t\t\t\tLibWrapperNotifications.conflict(data.package_info, affectedPackages, true, `${data.package_info.logStringCapitalized} did not chain the wrapper for '${data.target}'.`);\n\t\t\t\t\tdata.warned_conflict = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\t// Invalidate state to avoid asynchronous calls\n\t\t\tthis._invalidate_state(next_state);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\n\n\t// Non-property setter\n\tset_nonproperty(value, obj=null) {\n\t\tif(this.is_property)\n\t\t\tthrow new LibWrapperInternalError('Must not call \\'set_nonproperty\\' for a property wrapper.');\n\n\t\tconst inherited = (obj !== this.object);\n\n\t\t// If assigning to an instance directly, assign directly to instance\n\t\tif(inherited) {\n\t\t\tObject.defineProperty(obj, this.fn_name, {\n\t\t\t\tvalue: value,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap the new value\n\t\tthis._wrapped = value;\n\t\tthis.skip_existing_handlers();\n\n\t\t// Warn user and/or log conflict\n\t\tthis.warn_classic_wrapper();\n\t}\n\n\n\n\t// Conflict logging utilities\n\tget_affected_packages() {\n\t\tconst affectedPackages = this.getter_data.map((x) => {\n\t\t\treturn x.package_info;\n\t\t});\n\n\t\treturn affectedPackages;\n\t}\n\n\twarn_classic_wrapper() {\n\t\tconst package_info = new PackageInfo();\n\t\tconst affectedPackages = this.get_affected_packages();\n\n\t\tif(affectedPackages.length > 0) {\n\t\t\tconst notify = LibWrapperConflicts.register_conflict(package_info, affectedPackages, this, null, true);\n\n\t\t\tif(notify) {\n\t\t\t\tLibWrapperNotifications.conflict(package_info, affectedPackages, true, `Detected non-libWrapper wrapping of '${this.name}' by ${package_info.logString}. This will potentially lead to conflicts.`);\n\n\t\t\t\tif(DEBUG && console.trace)\n\t\t\t\t\tconsole.trace();\n\t\t\t}\n\t\t}\n\n\t\tif(!this.detected_classic_wrapper)\n\t\t\tthis.detected_classic_wrapper = []\n\t\tthis.detected_classic_wrapper.push(package_info.key);\n\t}\n\n\n\n\t// Wraper array methods\n\t// NOTE: These should only ever be called from libWrapper, they do not clean up after themselves\n\tget_fn_data(setter, to_modify=false) {\n\t\t// to_modify=true must be used any time the fn_data array will be modified.\n\t\t// If there are any outstanding wrapper calls, this will force the creation of a copy of the array, to avoid affecting said outstanding wrapper calls.\n\n\t\t// Sanity check\n\t\tif(setter && !this.is_property)\n\t\t\tthrow new LibWrapperInternalError(`libWrapper: '${this.name}' does not wrap a property, thus setter=true is illegal.`);\n\n\t\t// Get current fn_data\n\t\tconst prop_nm = setter ? 'setter_data' : 'getter_data';\n\t\tlet result = this[prop_nm];\n\n\t\t// If we are going to modify the return result...\n\t\tif(to_modify) {\n\t\t\t// Duplicate fn_data if we are modifying it and there are outstanding wrappers\n\t\t\tif(this._outstanding_wrappers > 0) {\n\t\t\t\tresult = this[prop_nm].slice(0);\n\t\t\t\tthis[prop_nm] = result;\n\t\t\t}\n\n\t\t\t// Increment unique ID\n\t\t\tthis[`_${prop_nm}_id`]++;\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_post_update_fn_data() {\n\t\tthis.update_use_static_dispatch();\n\t}\n\n\tsort() {\n\t\tfor(let setter of [false, true]) {\n\t\t\tif(setter && !this.is_property)\n\t\t\t\tcontinue;\n\n\t\t\tlet fn_data = this.get_fn_data(setter);\n\t\t\tfn_data.sort((a,b) => { return a.type - b.type || b.priority - a.priority });\n\t\t}\n\t}\n\n\tadd(data) {\n\t\t// Try to set a function name if there is none already\n\t\tconst fn = data.fn;\n\t\tif(!fn.name || fn.name === 'anonymous')\n\t\t\tset_function_name(fn, this._callstack_name(data.package_info.id ?? '<unknown>'));\n\n\t\t// Add to fn_data\n\t\tconst fn_data = this.get_fn_data(data.setter, true);\n\n\t\tfn_data.splice(0, 0, data);\n\t\tthis.sort(data.setter);\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tremove(data) {\n\t\tconst fn_data = this.get_fn_data(data.setter, true);\n\n\t\tconst index = fn_data.indexOf(data);\n\t\tfn_data.splice(index, 1);\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tclear() {\n\t\tthis.getter_data = [];\n\n\t\tif(this.is_property)\n\t\t\tthis.setter_data = [];\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tis_empty() {\n\t\treturn !this.getter_data.length && !this.setter_data?.length;\n\t}\n};\ndecorate_class_function_names(Wrapper);\n\n// Prevent modifications\nObject.freeze(Wrapper);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID, PACKAGE_TITLE, VERSION_WITH_GIT, TYPES_REVERSE, PERF_MODES_REVERSE} from '../consts.js';\nimport {LibWrapperStats} from './stats.js';\nimport {WRAPPERS} from '../utils/misc.js';\nimport {PackageInfo, PACKAGE_TYPES} from '../utils/package_info.js';\n\n// Map of currently loaded priorities\nexport const PRIORITIES = new Map();\n\nexport const load_priorities = function(value=null) {\n\t// Create existing priorities\n\tPRIORITIES.clear();\n\n\t// Parse config\n\tconst priority_cfg = value ?? game?.settings?.get(PACKAGE_ID, 'module-priorities');\n\tif(!priority_cfg)\n\t\treturn;\n\n\tfor(let type of ['prioritized', 'deprioritized']) {\n\t\tconst current = priority_cfg[type];\n\t\tif(!current)\n\t\t\tcontinue;\n\n\t\tconst base_priority = (type == 'prioritized') ? 10000 : -10000;\n\n\t\tlet new_current = null;\n\t\tObject.entries(current).forEach(entry => {\n\t\t\tlet [key, data] = entry;\n\n\t\t\t// Handle legacy format, if found\n\t\t\tif(!data.id) {\n\t\t\t\tdata = new PackageInfo(key, PACKAGE_TYPES.MODULE);\n\t\t\t\tkey = data.key;\n\t\t\t}\n\n\t\t\t// Add to priorities dictionary\n\t\t\tif(PRIORITIES.has(key))\n\t\t\t\treturn;\n\n\t\t\tPRIORITIES.set(key, base_priority - data.index);\n\t\t});\n\t}\n}\n\n\n\n// Main settings class\nexport class LibWrapperSettings extends FormApplication {\n\tstatic init() {\n\t\tgame.settings.register(PACKAGE_ID, 'notify-issues-gm', {\n\t\t\tname: 'Notify GM of Issues',\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'Whether to notify GMs when an issue is detected, for example a conflict.'\n\t\t});\n\n\t\tgame.settings.register(PACKAGE_ID, 'notify-issues-player', {\n\t\t\tname: 'Notify Players of Issues',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'Whether to notify Players when an issue is detected, for example a conflict.'\n\t\t});\n\n\t\tgame.settings.register(PACKAGE_ID, 'high-performance-mode', {\n\t\t\tname: 'High-Performance Mode',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'This disables most dynamic conflict detection capabilities in exchange for performance, especially relevant on low-end systems. Note that this will significantly decrease the chance conflicts are detected. As such, it is recommended to turn this off when installing or updating packages.'\n\t\t});\n\n\t\tgame.settings.registerMenu(PACKAGE_ID, 'menu', {\n\t\t\tname: '',\n\t\t\tlabel: `${PACKAGE_TITLE} Settings Menu`,\n\t\t\ticon: \"fas fa-cog\",\n\t\t\ttype: LibWrapperSettings,\n\t\t\trestricted: true\n\t\t});\n\n\t\tgame.settings.register(PACKAGE_ID, 'module-priorities', {\n\t\t\tname: '',\n\t\t\tdefault: {},\n\t\t\ttype: Object,\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\tonChange: value => load_priorities()\n\t\t});\n\n\t\t// Variables\n\t\tthis.show_ignored_conflicts = false;\n\n\t\t// When done, load the priorities\n\t\tload_priorities();\n\n\t\t// Seal to prevent accidental modification\n\t\tObject.seal(this);\n\t}\n\n\n\t// Settings UI\n\tstatic get defaultOptions() {\n\t\treturn {\n\t\t\t...super.defaultOptions,\n\t\t\ttemplate: `modules/${PACKAGE_ID}/templates/settings.html`,\n\t\t\theight: 700,\n\t\t\ttitle: `${PACKAGE_TITLE} Settings Menu`,\n\t\t\twidth: 600,\n\t\t\tclasses: [PACKAGE_ID, \"settings\"],\n\t\t\ttabs: [\n\t\t\t\t{\n\t\t\t\t\tnavSelector: '.tabs',\n\t\t\t\t\tcontentSelector: 'form',\n\t\t\t\t\tinitial: 'name'\n\t\t\t\t}\n\t\t\t],\n\t\t\tsubmitOnClose: false,\n\t\t\tcloseOnSubmit: false\n\t\t}\n\t}\n\n\tconstructor(object = {}, options) {\n\t\tsuper(object, options);\n\t}\n\n\tstatic showYesNoDialog(msg, yes_callback) {\n\t\tnew Dialog({\n\t\t\tcontent: msg,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: 'Yes',\n\t\t\t\t\tcallback: yes_callback\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'No'\n\t\t\t\t}\n\t\t\t}\n\t\t}).render(true);\n\t}\n\n\tgetActiveWrappers() {\n\t\tlet data = [];\n\n\t\tWRAPPERS.forEach((wrapper) => {\n\t\t\tfor(let is_setter of [false, true]) {\n\t\t\t\tif(is_setter && !wrapper.is_property)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet name = wrapper.name;\n\t\t\t\tif(is_setter)\n\t\t\t\t\tname = `${name}#set`;\n\n\t\t\t\tlet _d = {\n\t\t\t\t\tname  : name,\n\t\t\t\t\tpackages: []\n\t\t\t\t};\n\n\t\t\t\twrapper.get_fn_data(is_setter).forEach((fn_data) => {\n\t\t\t\t\tif(fn_data.package_info.id == PACKAGE_ID)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst d = {\n\t\t\t\t\t\tname     : fn_data.package_info.settingsName,\n\t\t\t\t\t\ttype     : TYPES_REVERSE[fn_data.type],\n\t\t\t\t\t\tperf_mode: PERF_MODES_REVERSE[fn_data.perf_mode]\n\t\t\t\t\t};\n\n\t\t\t\t\tif(d.perf_mode == 'AUTO')\n\t\t\t\t\t\td.perf_mode = null;\n\t\t\t\t\telse\n\t\t\t\t\t\td.perf_mode = `, ${d.perf_mode}`;\n\n\t\t\t\t\t_d.packages.push(d);\n\t\t\t\t});\n\n\t\t\t\tif(wrapper.detected_classic_wrapper) {\n\t\t\t\t\twrapper.detected_classic_wrapper.forEach((key) => {\n\t\t\t\t\t\t_d.packages.push({\n\t\t\t\t\t\t\tname     : new PackageInfo(key).settingsName,\n\t\t\t\t\t\t\ttype     : 'MANUAL',\n\t\t\t\t\t\t\tperf_mode: null\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(_d.packages.length > 0)\n\t\t\t\t\tdata.push(_d);\n\t\t\t}\n\t\t});\n\n\t\tdata.sort((a,b) => b.packages.length - a.packages.length);\n\n\t\treturn data;\n\t}\n\n\tgetConflicts() {\n\t\tif(!LibWrapperStats.collect_stats)\n\t\t\treturn null;\n\n\t\tlet data = [];\n\n\t\tLibWrapperStats.conflicts.forEach((conflict) => {\n\t\t\tlet total = conflict.count;\n\t\t\tif(this.show_ignored_conflicts)\n\t\t\t\ttotal += conflict.ignored;\n\n\t\t\tif(total == 0)\n\t\t\t\treturn;\n\n\t\t\tconst targets = [];\n\n\t\t\tdata.push({\n\t\t\t\tcount: conflict.count,\n\t\t\t\tignored: this.show_ignored_conflicts ? conflict.ignored : 0,\n\t\t\t\ttotal: total,\n\t\t\t\tpackage_id: conflict.package_info.settingsName,\n\t\t\t\tother_id: conflict.other_info.settingsName,\n\t\t\t\ttargets: targets\n\t\t\t});\n\n\t\t\tconflict.targets.forEach((obj, target) => {\n\t\t\t\tlet obj_total = obj.count;\n\t\t\t\tif(this.show_ignored_conflicts)\n\t\t\t\t\tobj_total += obj.ignored;\n\n\t\t\t\tif(obj_total > 0)\n\t\t\t\t\ttargets.push({\n\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\tcount: obj.count,\n\t\t\t\t\t\ttotal: obj_total,\n\t\t\t\t\t\tignored: this.show_ignored_conflicts ? obj.ignored : 0\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\ttargets.sort((a,b) => a.total - b.total);\n\t\t});\n\n\t\tdata.sort((a,b) => a.total - b.total);\n\n\t\treturn data;\n\t}\n\n\tgetPackages() {\n\t\tlet ret = {\n\t\t\tprioritized: [],\n\t\t\tnormal: [],\n\t\t\tdeprioritized: []\n\t\t};\n\n\t\tconst priorities = game.settings.get(PACKAGE_ID, 'module-priorities');\n\t\tconst cfg_prioritized   = priorities.prioritized   ?? {};\n\t\tconst cfg_deprioritized = priorities.deprioritized ?? {};\n\n\t\t// Normal packages\n\t\tif(LibWrapperStats.collect_stats) {\n\t\t\tLibWrapperStats.packages.forEach((key) => {\n\t\t\t\tconst info = new PackageInfo(key);\n\n\t\t\t\tif(info.key in cfg_prioritized || info.key in cfg_deprioritized)\n\t\t\t\t\treturn;\n\n\t\t\t\tret.normal.push(info);\n\t\t\t});\n\t\t\tret.normal.sort((a,b) => a.id.localeCompare(b.id));\n\t\t}\n\n\t\t// Prioritized packages\n\t\tObject.entries(cfg_prioritized).forEach((entry) => {\n\t\t\tlet [key, data] = entry;\n\n\t\t\t// Handle legacy format, if found\n\t\t\tif(!data.id) {\n\t\t\t\tdata = new PackageInfo(key, PACKAGE_TYPES.MODULE);\n\t\t\t\tkey = data.key;\n\t\t\t}\n\n\t\t\t// Push data\n\t\t\tret.prioritized.push({\n\t\t\t\tkey  : key,\n\t\t\t\tid   : data.id,\n\t\t\t\ttitle: data.title ?? `${data.title} <Inactive>`,\n\t\t\t\tindex: data.index\n\t\t\t});\n\t\t});\n\t\tret.prioritized.sort((a,b) => { return a.index - b.index });\n\n\t\t// Deprioritized packages\n\t\tObject.entries(cfg_deprioritized).forEach((entry) => {\n\t\t\tlet [key, data] = entry;\n\n\t\t\t// In case something went wrong and we have a duplicate package\n\t\t\tif(key in cfg_prioritized)\n\t\t\t\treturn;\n\n\t\t\t// Handle legacy format, if found\n\t\t\tif(!data.id) {\n\t\t\t\tdata = new PackageInfo(key, PACKAGE_TYPES.MODULE);\n\t\t\t\tkey = data.key;\n\t\t\t}\n\n\t\t\t// Push data\n\t\t\tret.deprioritized.push({\n\t\t\t\tkey  : key,\n\t\t\t\tid   : data.id,\n\t\t\t\ttitle: data.title ?? `${data.title} <Inactive>`,\n\t\t\t\tindex: data.index\n\t\t\t});\n\t\t});\n\t\tret.deprioritized.sort((a,b) => { return a.index - b.index });\n\n\t\t// Done\n\t\treturn ret;\n\t}\n\n\tgetData() {\n\t\tlet data = {\n\t\t\tabout: {\n\t\t\t\tname: PACKAGE_TITLE,\n\t\t\t\tversion: VERSION_WITH_GIT,\n\t\t\t\tcollect_stats: LibWrapperStats.collect_stats\n\t\t\t},\n\n\t\t\twrappers: this.getActiveWrappers(),\n\t\t\tconflicts: this.getConflicts(),\n\t\t\tpackages: this.getPackages(),\n\t\t\tshow_ignored_conflicts: this.show_ignored_conflicts\n\t\t};\n\n\t\treturn data;\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\tlet _this = this;\n\n\t\t// Tree view\n\t\thtml.find('.caret.has-nested').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\t$this.parent().find('.nested').toggleClass('active');\n\t\t\t$this.toggleClass('caret-down');\n\t\t});\n\n\t\t// Reload button\n\t\thtml.find('button.reload').on('click', function(event) {\n\t\t\t_this.render(true);\n\t\t});\n\n\t\t// Show ignored conflicts checkbox\n\t\thtml.find('.lw-show-ignored-conflicts').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst checkbox = $this.find('input[type=checkbox]');\n\n\t\t\t_this.show_ignored_conflicts = !checkbox.prop('checked');\n\t\t\t_this.render(true);\n\t\t});\n\n\t\t// Easily focus the priority groups\n\t\thtml.find('.package-priority-group').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst select = $this.find('select');\n\n\t\t\tif(!select.is(':focus'))\n\t\t\t\tselect.focus();\n\t\t});\n\n\t\t// Change priority buttons\n\t\thtml.find('button.change-priority').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst which = $this.data('which');\n\t\t\tconst direction = $this.data('direction');\n\t\t\tconst up = (direction === 'up');\n\n\t\t\tconst list = html.find(`.${which}`);\n\t\t\tconst selected = list.find('option:selected');\n\n\t\t\tconst insertPos = up ? selected.prev() : selected.next();\n\n\t\t\tif(!insertPos.length)\n\t\t\t\treturn;\n\n\t\t\tif(up)\n\t\t\t\tinsertPos.before(selected);\n\t\t\telse\n\t\t\t\tinsertPos.after(selected);\n\t\t});\n\n\t\t// Change category buttons\n\t\thtml.find('button.change-category').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst _from = $this.data('from');\n\t\t\tconst _to = $this.data('to');\n\n\t\t\tconst from = html.find(`.${_from}`);\n\t\t\tconst to = html.find(`.${_to}`);\n\n\t\t\tconst element = from.find('option:selected');\n\n\t\t\t// Search for the element to focus next\n\t\t\tlet next_focus = element.next();\n\t\t\tif(next_focus.length == 0)\n\t\t\t\tnext_focus = element.prev();\n\n\t\t\t// Move to the destination list\n\t\t\tto.append(element);\n\n\t\t\t// If the destination was the 'normal', we need to sort it alphabetically\n\t\t\tif(_to == 'packages-normal') {\n\t\t\t\tconst options = to.find('option');\n\t\t\t\toptions.sort((a,b) => { return $(a).val() > $(b).val() ? 1 : -1 });\n\t\t\t\tto.empty().append(options);\n\t\t\t}\n\n\t\t\t// Focus the previous list again\n\t\t\tif(next_focus.length)\n\t\t\t\tfrom.val(next_focus.val());\n\n\t\t\tfrom.focus();\n\t\t});\n\n\t\t// Submit 'Priorities'\n\t\thtml.find('.submit').on('click', function(event) {\n\t\t\t// Collect prioritization order into hidden fields that will be submitted\n\t\t\tfor(let type of ['packages-prioritized', 'packages-deprioritized']) {\n\t\t\t\tconst select = html.find(`.${type}`);\n\n\t\t\t\tconst options = select.find('option');\n\n\t\t\t\tlet arr = [];\n\t\t\t\toptions.each((i, option) => {\n\t\t\t\t\tarr.push($(option).val());\n\t\t\t\t});\n\n\t\t\t\t$('<input>').attr('type', 'hidden').attr('name', `${type}-hidden`).attr('value', arr.join(',')).appendTo(html);\n\t\t\t}\n\n\t\t\thtml.submit();\n\t\t});\n\n\t\t// Reset button\n\t\thtml.find('.reset').on('click', function(event) {\n\t\t\t$('input[type=hidden]').remove();\n\n\t\t\tLibWrapperSettings.showYesNoDialog(\"<p>Resetting the package priorities will move all packages back to 'Unprioritized'. This action cannot be undone. Are you sure you want to continue?</p>\", () => {\n\t\t\t\tfor(let type of ['packages-prioritized', 'packages-deprioritized']) {\n\t\t\t\t\t$('<input>').attr('type', 'hidden').attr('name', `${type}-hidden`).attr('value', '').appendTo(html);\n\t\t\t\t}\n\n\t\t\t\thtml.submit();\n\t\t\t});\n\t\t});\n\t}\n\n\tasync _updateObject(ev, formData) {\n\t\t// Parse priorities\n\t\tconst priorities = game.settings.get(PACKAGE_ID, 'module-priorities');\n\n\t\tfor(let type of ['prioritized', 'deprioritized']) {\n\t\t\tconst fld = `packages-${type}-hidden`;\n\n\t\t\tif(!(fld in formData))\n\t\t\t\tcontinue;\n\n\t\t\tconst value = formData[fld];\n\t\t\tconst split = (value === '') ? [] : value.split(',');\n\n\t\t\tlet old_prio = priorities[type] ?? {};\n\t\t\tlet new_prio = {};\n\t\t\tlet counter = 0;\n\n\t\t\tsplit.forEach((key) => {\n\t\t\t\tif(!key)\n\t\t\t\t\treturn;\n\n\t\t\t\tconst old_data = old_prio[key];\n\t\t\t\tconst new_data = new PackageInfo(key);\n\n\t\t\t\tnew_prio[key] = {\n\t\t\t\t\tid   : new_data.id,\n\t\t\t\t\ttitle: new_data.exists ? new_data.title : old_data.title,\n\t\t\t\t\tindex: counter++\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tpriorities[type] = new_prio;\n\t\t}\n\n\t\t// Sanity check for duplicates\n\t\tObject.keys(priorities.deprioritized).forEach((key) => {\n\t\t\tif(key in priorities.prioritized)\n\t\t\t\tdelete priorities.deprioritized[key];\n\t\t});\n\n\t\t// Save\n\t\tawait game.settings.set(PACKAGE_ID, 'module-priorities', priorities);\n\n\t\t// Re-render\n\t\tthis.render(true);\n\n\t\t// Ask user to refresh page\n\t\tLibWrapperSettings.showYesNoDialog(\"<p>It is recommended you reload this page to apply the new package priorities. Do you wish to reload?</p>\", () => location.reload());\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright ¬© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {\n\tPACKAGE_ID, MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION, SUFFIX_VERSION, META_VERSION, VERSION, GIT_VERSION, VERSION_WITH_GIT, parse_manifest_version,\n\tIS_UNITTEST, PROPERTIES_CONFIGURABLE, DEBUG, setDebug,\n\tTYPES, TYPES_REVERSE, TYPES_LIST,\n\tPERF_MODES, PERF_MODES_REVERSE, PERF_MODES_LIST\n} from '../consts.js';\n\nimport {Wrapper} from './wrapper.js';\nimport {get_global_variable, WRAPPERS, decorate_name, decorate_class_function_names} from '../utils/misc.js';\nimport {PackageInfo} from '../utils/package_info.js';\n\nimport {init_error_listeners, onUnhandledError} from '../utils/errors/listeners.js';\nimport {LibWrapperError, LibWrapperPackageError, LibWrapperInternalError} from '../utils/errors/base_errors.js';\nimport {LibWrapperAlreadyOverriddenError, LibWrapperInvalidWrapperChainError} from '../utils/errors/api_errors.js';\n\nimport {LibWrapperNotifications} from '../ui/notifications.js'\nimport {LibWrapperStats} from '../ui/stats.js';\nimport {LibWrapperConflicts} from '../ui/conflicts.js';\nimport {LibWrapperSettings, PRIORITIES} from '../ui/settings.js';\n\n\n\n// Internal variables\nlet libwrapper_ready = false;\nlet allow_libwrapper_registrations = true;\n\n\n// Internal Methods\nexport function _create_wrapper_from_object(obj, fn_name, name=undefined, package_info=undefined) {\n\tconst wrapper = new Wrapper(obj, fn_name, name, package_info);\n\tWRAPPERS.add(wrapper);\n\treturn wrapper;\n}\n\nfunction _split_target_and_setter(target) {\n\tlet is_setter = target.endsWith('#set');\n\tlet _target = !is_setter ? target : target.slice(0, -4);\n\n\treturn [_target, is_setter];\n}\n\nfunction _valid_identifier(ident, allow_dot=false) {\n\tconst re = allow_dot ? /^[a-zA-Z_$][0-9a-zA-Z_$.]*$/ : /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\n\treturn re.test(ident);\n}\n\nfunction _get_target_object(_target, package_info=undefined) {\n\t// Parse the target\n\tconst target = _split_target_and_setter(_target)[0];\n\n\tconst split = target.split('.');\n\tconst fn_name = split.pop();\n\n\t// Get root object\n\tconst root_nm = split.splice(0,1)[0];\n\tif(!_valid_identifier(root_nm))\n\t\tthrow new LibWrapperPackageError(`Invalid target '${target}.'`, package_info);\n\tif(root_nm == 'libWrapper')\n\t\tthrow new LibWrapperPackageError(`Not allowed to wrap libWrapper internals.`, package_info);\n\n\tconst root = get_global_variable(root_nm);\n\tif(!root)\n\t\tthrow new LibWrapperPackageError(`Could not find target '${target}'.`, package_info);\n\n\t// Get target object\n\tlet obj = root;\n\tfor(let scope of split) {\n\t\tif(!_valid_identifier(scope))\n\t\t\tthrow new LibWrapperPackageError(`Invalid target '${target}'.`, package_info);\n\n\t\tobj = obj[scope];\n\t\tif(!obj)\n\t\t\tthrow new LibWrapperPackageError(`Could not find target '${target}'.`, package_info);\n\t}\n\n\treturn [obj, fn_name, target];\n}\n\nfunction _create_wrapper(target, package_info=null) {\n\t// Create wrapper\n\treturn _create_wrapper_from_object(..._get_target_object(target), package_info);\n}\n\nfunction _find_wrapper_by_name(_name) {\n\tconst name = _split_target_and_setter(_name)[0];\n\n\tfor(let wrapper of WRAPPERS) {\n\t\tif(wrapper.names.includes(name))\n\t\t\treturn wrapper;\n\t}\n\n\treturn null;\n}\n\nfunction _find_package_data_in_wrapper(package_info, wrapper, is_setter) {\n\treturn wrapper.get_fn_data(is_setter).find((x) => x.package_info?.equals(package_info));\n}\n\nfunction _find_package_data_with_target(package_info, _target) {\n\tconst target_and_setter = _split_target_and_setter(_target);\n\tconst target    = target_and_setter[0];\n\tconst is_setter = target_and_setter[1];\n\n\tconst wrapper = _find_wrapper_by_name(target);\n\tif(!wrapper)\n\t\treturn null;\n\n\treturn _find_package_data_in_wrapper(package_info, wrapper, is_setter);\n}\n\nfunction _get_default_priority(package_info, target) {\n\tif(package_info.id === PACKAGE_ID)\n\t\treturn Number.MAX_VALUE;\n\n\tconst priority_cfg = PRIORITIES.get(package_info.key);\n\tif(priority_cfg !== undefined)\n\t\treturn priority_cfg;\n\n\treturn 0;\n}\n\n\nfunction _unwrap_if_possible(wrapper) {\n\tif(wrapper.is_empty() && PROPERTIES_CONFIGURABLE) {\n\t\twrapper.unwrap();\n\t\tWRAPPERS.delete(wrapper);\n\t}\n}\n\nexport function _clear(target) {\n\tconst wrapper = _find_wrapper_by_name(target);\n\n\tif(wrapper) {\n\t\twrapper.clear();\n\t\t_unwrap_if_possible(wrapper);\n\n\t\tconsole.info(`libWrapper: Cleared all wrapper functions for '${target}'.`);\n\t}\n}\n\nexport function _unwrap_all() {\n\tfor(let wrapper of WRAPPERS) {\n\t\twrapper.clear();\n\t\twrapper.unwrap();\n\t}\n\n\tWRAPPERS.clear();\n}\n\nfunction _get_package_info(package_id) {\n\tlet package_info = new PackageInfo();\n\n\tif(!package_id || typeof package_id !== 'string')\n\t\tthrow new LibWrapperPackageError('Parameter \\'package_id\\' must be a string.', package_info);\n\n\tif(package_info.exists) {\n\t\tif(package_id != package_info.id)\n\t\t\tthrow new LibWrapperPackageError(`${package_info.logStringCapitalized} is not allowed to call libWrapper with package_id='${package_id}'.`, package_info);\n\t}\n\telse {\n\t\tpackage_info = new PackageInfo(package_id);\n\t}\n\n\tif(package_id == PACKAGE_ID) {\n\t\tif(!allow_libwrapper_registrations)\n\t\t\tthrow new LibWrapperPackageError(`Not allowed to call libWrapper with package_id='${package_id}'.`, package_info);\n\t}\n\telse {\n\t\tif(!package_info.exists)\n\t\t\tthrow new LibWrapperPackageError(`Package '${package_id}' is not a valid package.`, package_info);\n\t}\n\n\treturn package_info;\n}\n\nlet FORCE_FAST_MODE = false;\nfunction _force_fast_mode(new_fast_mode) {\n\tFORCE_FAST_MODE = new_fast_mode;\n}\n\n\n\n// Publicly exposed class\nexport class libWrapper {\n\t// Properties\n\t/**\n\t * Get libWrapper version\n\t * @returns {string}  libWrapper version in string form, i.e. \"<MAJOR>.<MINOR>.<PATCH>.<SUFFIX><META>\"\n\t */\n\tstatic get version() { return VERSION; }\n\n\t/**\n\t * Get libWrapper version\n\t * @returns {[number,number,number,number,string]}  libWrapper version in array form, i.e. [<MAJOR>, <MINOR>, <PATCH>, <SUFFIX>, <META>]\n\t */\n\tstatic get versions() { return [MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION, SUFFIX_VERSION, META_VERSION]; }\n\n\t/**\n\t * Get the Git version identifier.\n\t * @returns {string}  Git version identifier, usually 'HEAD' or the commit hash.\n\t */\n\tstatic get git_version() { return GIT_VERSION };\n\n\n\t/**\n\t * @returns {boolean}  The real libWrapper module will always return false. Fallback implementations (e.g. poly-fill / shim) should return true.\n\t */\n\tstatic get is_fallback() { return false; }\n\n\t/**\n\t * @returns {boolean}  Whether libWrapper is in debug mode.\n\t */\n\tstatic get debug() { return DEBUG; }\n\t/**\n\t * @param {boolean} value  Whether to enable or disable libWrapper debug mode.\n\t */\n\tstatic set debug(value) { setDebug(value) }\n\n\t// Errors\n\tstatic get LibWrapperError() { return LibWrapperError; };\n\tstatic get Error() { return LibWrapperError; }\n\n\tstatic get LibWrapperInternalError() { return LibWrapperInternalError; };\n\tstatic get InternalError() { return LibWrapperInternalError; }\n\n\tstatic get LibWrapperPackageError() { return LibWrapperPackageError; };\n\tstatic get PackageError() { return LibWrapperPackageError; };\n\n\tstatic get LibWrapperAlreadyOverriddenError() { return LibWrapperAlreadyOverriddenError; };\n\tstatic get AlreadyOverriddenError() { return LibWrapperAlreadyOverriddenError; };\n\n\tstatic get LibWrapperInvalidWrapperChainError() { return LibWrapperInvalidWrapperChainError; };\n\tstatic get InvalidWrapperChainError() { return LibWrapperInvalidWrapperChainError; };\n\n\t/* Undocumented on purpose, do not use */\n\tstatic get onUnhandledError() { return onUnhandledError; };\n\n\n\t// Methods\n\t/**\n\t * Test for a minimum libWrapper version.\n\t * First introduced in v1.4.0.0.\n\t *\n\t * @param {number} major   Minimum major version\n\t * @param {number} minor   [Optional] Minimum minor version. Default is 0.\n\t * @param {number} patch   [Optional] Minimum patch version. Default is 0.\n\t * @param {number} suffix  [Optional] Minimum suffix version. Default is 0.\n\t * @returns {boolean}      Returns true if the libWrapper version is at least the queried version, otherwise false.\n\t */\n\tstatic version_at_least(major, minor=0, patch=0, suffix=0) {\n\t\tif(MAJOR_VERSION == major) {\n\t\t\tif(MINOR_VERSION == minor) {\n\t\t\t\tif(PATCH_VERSION == patch) {\n\t\t\t\t\treturn SUFFIX_VERSION == suffix;\n\t\t\t\t}\n\n\t\t\t\treturn PATCH_VERSION >= patch;\n\t\t\t}\n\n\t\t\treturn MINOR_VERSION > minor;\n\t\t}\n\t\treturn MAJOR_VERSION > major;\n\t}\n\n\t/**\n\t * Register a new wrapper.\n\t * Important: If called before the 'init' hook, this method will fail.\n\t *\n\t * In addition to wrapping class methods, there is also support for wrapping methods on specific object instances, as well as class methods inherited from parent classes.\n\t * However, it is recommended to wrap methods directly in the class that defines them whenever possible, as inheritance/instance wrapping is less thoroughly tested and will incur a performance penalty.\n\t *\n\t * Triggers FVTT hook 'libWrapper.Register' when successful.\n\t *\n\t * @param {string} package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest.\n\t * @param {string} target      A string containing the path to the function you wish to add the wrapper to, starting at global scope, for example 'SightLayer.prototype.updateToken'.\n\t *                             This works for both normal methods, as well as properties with getters. To wrap a property's setter, append '#set' to the name, for example 'SightLayer.prototype.blurDistance#set'.\n\t * @param {function} fn        Wrapper function. The first argument will be the next function in the chain, except for 'OVERRIDE' wrappers.\n\t *                             The remaining arguments will correspond to the parameters passed to the wrapped method.\n\t * @param {string} type        [Optional] The type of the wrapper. Default is 'MIXED'.\n\t *\n\t *   The possible types are:\n\t *\n\t *   'WRAPPER':\n\t *     Use if your wrapper will *always* call the next function in the chain.\n\t *     This type has priority over every other type. It should be used whenever possible as it massively reduces the likelihood of conflicts.\n\t *     Note that the library will auto-detect if you use this type but do not call the original function, and automatically unregister your wrapper.\n\t *\n\t *   'MIXED':\n\t *     Default type. Your wrapper will be allowed to decide whether it should call the next function in the chain or not.\n\t *     These will always come after 'WRAPPER'-type wrappers. Order is not guaranteed, but conflicts will be auto-detected.\n\t *\n\t *   'OVERRIDE':\n\t *     Use if your wrapper will *never* call the next function in the chain. This type has the lowest priority, and will always be called last.\n\t *     If another package already has an 'OVERRIDE' wrapper registered to the same method, using this type will throw a <libWrapper.LibWrapperAlreadyOverriddenError> exception.\n\t *     Catching this exception should allow you to fail gracefully, and for example warn the user of the conflict.\n\t *     Note that if the GM has explicitly given your package priority over the existing one, no exception will be thrown and your wrapper will take over.\n\t *\n\t * @param {Object} options [Optional] Additional options to libWrapper.\n\t *\n\t * @param {boolean} options.chain [Optional] If 'true', the first parameter to 'fn' will be a function object that can be called to continue the chain.\n\t *   Default is 'false' if type=='OVERRIDE', otherwise 'true'.\n\t *   First introduced in v1.3.6.0.\n\t *\n\t * @param {string} options.perf_mode [OPTIONAL] Selects the preferred performance mode for this wrapper. Default is 'AUTO'.\n\t *   It will be used if all other wrappers registered on the same target also prefer the same mode, otherwise the default will be used instead.\n\t *   This option should only be specified with good reason. In most cases, using 'AUTO' in order to allow the GM to choose is the best option.\n\t *   First introduced in v1.5.0.0.\n\t *\n\t *   The possible modes are:\n\t *\n\t *   'NORMAL':\n\t *     Enables all conflict detection capabilities provided by libWrapper. Slower than 'FAST'.\n\t *     Useful if wrapping a method commonly modified by other packages, to ensure most issues are detected.\n\t *     In most other cases, this mode is not recommended and 'AUTO' should be used instead.\n\t *\n\t *   'FAST':\n\t *     Disables some conflict detection capabilities provided by libWrapper, in exchange for performance. Faster than 'NORMAL'.\n\t *     Will guarantee wrapper call order and per-package prioritization, but fewer conflicts will be detectable.\n\t *     This performance mode will result in comparable performance to traditional non-libWrapper wrapping methods.\n\t *     Useful if wrapping a method called repeatedly in a tight loop, for example 'WallsLayer.testWall'.\n\t *     In most other cases, this mode is not recommended and 'AUTO' should be used instead.\n\t *\n\t *   'AUTO':\n\t *     Default performance mode. If unsure, choose this mode.\n\t *     Will allow the GM to choose which performance mode to use.\n\t *     Equivalent to 'FAST' when the libWrapper 'High-Performance Mode' setting is enabled by the GM, otherwise 'NORMAL'.\n\t */\n\tstatic register(package_id, target, fn, type='MIXED', options={}) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Validate we're allowed to register wrappers at this moment\n\t\tif(package_id != PACKAGE_ID && !libwrapper_ready)\n\t\t\tthrow new LibWrapperPackageError('Not allowed to register wrappers before the \\'libWrapperReady\\' hook fires', package_info);\n\n\t\t// Validate other arguments\n\t\tif(!target || typeof target !== 'string')\n\t\t\tthrow new LibWrapperPackageError('Parameter \\'target\\' must be a string.', package_info);\n\n\t\tif(!fn || !(fn instanceof Function))\n\t\t\tthrow new LibWrapperPackageError('Parameter \\'fn\\' must be a function.', package_info);\n\n\t\ttype = TYPES[type.toUpperCase()];\n\t\tif(typeof type === 'undefined' || !(type in TYPES_REVERSE))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'type' must be one of [${TYPES_LIST.join(', ')}].`, package_info);\n\n\t\tconst chain = options?.chain ?? (type < TYPES.OVERRIDE);\n\t\tif(typeof chain !== 'boolean')\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'chain' must be a boolean.`, package_info);\n\n\t\tif(IS_UNITTEST && FORCE_FAST_MODE)\n\t\t\toptions.perf_mode = 'FAST';\n\t\tconst perf_mode = PERF_MODES[options?.perf_mode?.toUpperCase() ?? 'AUTO'];\n\t\tif(typeof perf_mode === 'undefined' || !(perf_mode in PERF_MODES_REVERSE))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'perf_mode' must be one of [${PERF_MODES_LIST.join(', ')}].`, package_info);\n\n\n\t\t// Split '#set' from the target\n\t\tconst target_and_setter  = _split_target_and_setter(target);\n\t\tconst target_without_set = target_and_setter[0];\n\t\tconst is_setter          = target_and_setter[1];\n\n\t\t// Create wrapper\n\t\tlet wrapper = _create_wrapper(target, package_info);\n\n\t\t// Only allow '#set' when the wrapper is wrapping a property\n\t\tif(is_setter && !wrapper.is_property)\n\t\t\tthrow new LibWrapperPackageError(`Cannot register a wrapper for '${target}' by ${package_info.logString}' because '${target_without_set}' is not a property, and therefore has no setter.`, package_info);\n\n\t\t// Check if this wrapper is already registered\n\t\tif(_find_package_data_in_wrapper(package_info, wrapper, is_setter))\n\t\t\tthrow new LibWrapperPackageError(`A wrapper for '${target}' has already been registered by ${package_info.logString}.`, package_info);\n\n\t\t// Get priority\n\t\tconst priority = _get_default_priority(package_info, target);\n\n\t\t// Register this package as having wrapped something\n\t\t// We do this before checking for duplicate OVERRIDEs to ensure users can change this package's priorities regardless\n\t\tif(package_info.id != PACKAGE_ID)\n\t\t\tLibWrapperStats.register_package(package_info);\n\n\t\t// Only allow one 'OVERRIDE' type\n\t\tif(type >= TYPES.OVERRIDE) {\n\t\t\tconst existing = wrapper.get_fn_data(is_setter).find((x) => { return x.type == TYPES.OVERRIDE });\n\n\t\t\tif(existing) {\n\t\t\t\tif(priority <= existing.priority) {\n\t\t\t\t\tthrow new LibWrapperAlreadyOverriddenError(package_info, existing.package_info, wrapper, target);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// We trigger a hook first\n\t\t\t\t\tif(Hooks.call('libWrapper.OverrideLost', existing.package_info.id, package_info.id, wrapper.name, wrapper.frozen_names) !== false) {\n\t\t\t\t\t\tLibWrapperConflicts.register_conflict(package_info, existing.package_info, wrapper, null, false);\n\t\t\t\t\t\tLibWrapperNotifications.conflict(existing.package_info, package_info, false,\n\t\t\t\t\t\t\t`${package_info.logStringCapitalized} has higher priority, and is replacing the 'OVERRIDE' registered by ${package_info.logString} for '${wrapper.name}'.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Wrap\n\t\tlet data = {\n\t\t\tpackage_info : package_info,\n\t\t\ttarget       : target,\n\t\t\tsetter       : is_setter,\n\t\t\tfn           : fn,\n\t\t\ttype         : type,\n\t\t\twrapper      : wrapper,\n\t\t\tpriority     : priority,\n\t\t\tchain        : chain,\n\t\t\tperf_mode    : perf_mode\n\t\t};\n\n\t\twrapper.add(data);\n\n\t\t// Done\n\t\tif(DEBUG || (!IS_UNITTEST && package_info.id != PACKAGE_ID)) {\n\t\t\tHooks.callAll('libWrapper.Register', package_info.id, target, type, options);\n\t\t\tconsole.info(`libWrapper: Registered a wrapper for '${target}' by ${package_info.logString} with type ${TYPES_REVERSE[type]}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister an existing wrapper.\n\t *\n\t * Triggers FVTT hook 'libWrapper.Unregister' when successful.\n\t *\n\t * @param {string} package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest.\n\t * @param {string} target      A string containing the path to the function you wish to remove the wrapper from, starting at global scope. For example: 'SightLayer.prototype.updateToken'\n\t * @param {function} fail      [Optional] If true, this method will throw an exception if it fails to find the method to unwrap. Default is 'true'.\n\t */\n\tstatic unregister(package_id, target, fail=true) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Find wrapper\n\t\tconst data = _find_package_data_with_target(package_info, target);\n\t\tif(!data) {\n\t\t\tif(fail)\n\t\t\t\tthrow new LibWrapperPackageError(`Cannot unregister '${target}' by ${package_info.logString} as no such wrapper has been registered`, package_info);\n\t\t\treturn;\n\t\t}\n\n\t\tconst wrapper = data.wrapper;\n\n\t\t// Remove from fn_data\n\t\twrapper.remove(data);\n\t\t_unwrap_if_possible(wrapper);\n\n\t\t// Done\n\t\tif(DEBUG || package_info.id != PACKAGE_ID) {\n\t\t\tHooks.callAll('libWrapper.Unregister', package_info.id, target);\n\t\t\tconsole.info(`libWrapper: Unregistered the wrapper for '${target}' by ${package_info.logString}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister all wrappers created by a given package.\n\t *\n\t * Triggers FVTT hook 'libWrapper.UnregisterAll' when successful.\n\t *\n\t * @param {string} package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest.\n\t */\n\tstatic unregister_all(package_id) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Clear package wrappers\n\t\tfor(let wrapper of WRAPPERS) {\n\t\t\tthis.unregister(package_info.id, wrapper.name, false);\n\n\t\t\tif(wrapper.is_property)\n\t\t\t\tthis.unregister(package_info.id, `${wrapper.name}#set`, false);\n\t\t}\n\n\t\tif(DEBUG || package_info.id != PACKAGE_ID) {\n\t\t\tHooks.callAll('libWrapper.UnregisterAll', package_info.id);\n\t\t\tconsole.info(`libWrapper: Unregistered all wrapper functions by ${package_info.logString}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Ignore conflicts matching specific filters when detected, instead of warning the user.\n\t *\n\t * This can be used when there are conflict warnings that are known not to cause any issues, but are unable to be resolved.\n\t * Conflicts will be ignored if they involve both 'package_id' and one of 'ignore_ids', and relate to one of 'targets'.\n\t *\n\t * Note that the user can still see which detected conflicts were ignored, by toggling \"Show ignored conflicts\" in the \"Conflicts\" tab in the libWrapper settings.\n\t *\n\t * First introduced in v1.7.0.0.\n\t *\n\t * @param {string}            package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest. This will be the module that owns this ignore entry.\n\t * @param {(string|string[])} ignore_ids  Other package ID(s) with which conflicts should be ignored.\n\t * @param {(string|string[])} targets     Target(s) for which conflicts should be ignored, corresponding to the 'target' parameter to 'libWrapper.register'.\n\t *\n\t * @param {Object} options [Optional] Additional options to libWrapper.\n\t *\n\t * @param {boolean} options.ignore_errors  [Optional] If 'true', will also ignore confirmed conflicts (i.e. errors), rather than only potential conflicts (i.e. warnings).\n\t *     Be careful when setting this to 'true', as confirmed conflicts are almost certainly something the user should be made aware of.\n\t *     Defaults to 'false'.\n\t */\n\tstatic ignore_conflicts(package_id, ignore_ids, targets, options={}) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Validate we are allowed to call this method right now\n\t\tif(!libwrapper_ready)\n\t\t\tthrow new LibWrapperPackageError('Not allowed to ignore conflicts before the \\'libWrapperReady\\' hook fires', package_info);\n\n\t\t// Convert parameters to arrays\n\t\tif(!Array.isArray(ignore_ids))\n\t\t\tignore_ids = [ignore_ids];\n\t\tif(!Array.isArray(targets))\n\t\t\ttargets = [targets];\n\n\t\t// Validate parameters #2\n\t\tconst is_string = (x) => (typeof x === 'string');\n\n\t\tif(!ignore_ids.every(is_string))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'ignore_ids' must be a string, or an array of strings.`, package_info);\n\n\t\tif(!targets.every(is_string))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'targets' must be a string, or an array of strings.`, package_info);\n\t\tif(!targets.every((x) => _valid_identifier(x, true)))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'targets' must only contain valid targets.`, package_info);\n\n\t\tconst ignore_errors = options.ignore_errors ?? false;\n\t\tif(typeof ignore_errors !== 'boolean')\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'options.ignore_errors' must be a boolean.`, package_info);\n\n\n\t\t// Convert 'other_ids' to PackageInfo objects and filter out any that do not exist\n\t\tconst ignore_infos = ignore_ids.map((x) => new PackageInfo(x)).filter((x) => x.exists);\n\n\t\t// Ignore API call if no packages to be ignored\n\t\tif(ignore_infos.length == 0) {\n\t\t\tconsole.debug(`libWrapper: Ignoring 'ignore_conflict' call for ${package_info.logString} since none of the package IDs provided exist or are active.`)\n\t\t\treturn;\n\t\t}\n\n\t\t// Register ignores\n\t\tLibWrapperConflicts.register_ignore(package_info, ignore_infos, targets, ignore_errors);\n\n\t\tif(DEBUG || package_info.id != PACKAGE_ID)\n\t\t\tconsole.debug(`libWrapper: Ignoring conflicts involving ${package_info.logString} and [${ignore_infos.map((x) => x.logString).join(', ')}] for targets [${targets.join(', ')}].`);\n\t}\n};\ndecorate_class_function_names(libWrapper);\nif(IS_UNITTEST) {\n\t// Some methods should be exposed during unit tests\n\tlibWrapper._UT_unwrap_all = _unwrap_all;\n\tlibWrapper._UT_create_wrapper_from_object = _create_wrapper_from_object\n\tlibWrapper._UT_clear = _clear;\n\tlibWrapper._UT_force_fast_mode = _force_fast_mode;\n\tlibWrapper._UT_get_force_fast_mode = (() => FORCE_FAST_MODE);\n\tlibWrapper._UT_clear_ignores = (() => LibWrapperConflicts.clear_ignores());\n}\nObject.freeze(libWrapper);\n\n\n\n// Define as property so that it can't be deleted\ndelete globalThis.libWrapper;\nObject.defineProperty(globalThis, 'libWrapper', {\n\tget: () => libWrapper,\n\tset: (value) => { throw `libWrapper: Not allowed to re-assign the global instance of libWrapper` },\n\tconfigurable: false\n});\n\n\n\n// Setup unhandled error listeners\ninit_error_listeners();\n\n// Initialize libWrapper right before the 'init' hook. Unit tests just initialize immediately\n{\n\tconst libWrapperInit = decorate_name('libWrapperInit');\n\tconst obj = {\n\t\t[libWrapperInit]: function(wrapped, ...args) {\n\t\t\t// Initialization steps\n\t\t\tlibwrapper_ready = true;\n\n\t\t\tparse_manifest_version();\n\t\t\tLibWrapperSettings.init();\n\t\t\tLibWrapperStats.init();\n\t\t\tLibWrapperConflicts.init();\n\t\t\tLibWrapperNotifications.init();\n\n\t\t\t// Notify everyone the library has loaded and is ready to start registering wrappers\n\t\t\tconsole.info(`libWrapper ${VERSION_WITH_GIT}: Ready.`);\n\t\t\tHooks.callAll('libWrapper.Ready', libWrapper);\n\n\t\t\treturn wrapped(...args);\n\t\t}\n\t};\n\n\tif(!IS_UNITTEST)\n\t\tlibWrapper.register('lib-wrapper', 'Game.prototype.initialize', obj[libWrapperInit], 'WRAPPER', {perf_mode: 'FAST'});\n\telse\n\t\tobj[libWrapperInit](()=>{});\n}\n\n// Lock down registrations using package ID 'lib-wrapper'\nallow_libwrapper_registrations = false;"],"names":["PACKAGE_ID","VERSION","MAJOR_VERSION","MINOR_VERSION","PATCH_VERSION","SUFFIX_VERSION","META_VERSION","GIT_VERSION","GIT_VERSION_SHORT","VERSION_WITH_GIT","IS_UNITTEST","Game","PROPERTIES_CONFIGURABLE","DEBUG","TYPES_LIST","Object","freeze","TYPES","WRAPPER","MIXED","OVERRIDE","TYPES_REVERSE","key","PERF_MODES_LIST","PERF_MODES","STANDARD","AUTO","FAST","PERF_MODES_REVERSE","global_eval","eval","set_function_name","fn","name","displayName","defineProperty","value","writable","enumerable","configurable","e","decorate_name","suffix","decorate_class_function_names","klass","props","getOwnPropertyNames","push","getOwnPropertySymbols","prop","descriptor","getOwnPropertyDescriptor","get","set","prototype","WRAPPERS","Set","PACKAGE_TYPES","UNKNOWN","MODULE","SYSTEM","WORLD","PACKAGE_TYPES_REVERSE","PackageInfo","[object Object]","id","type","this","detect_id","includes","from_key","detect_type","obj","constructor","stack_trace","set_unknown","undefined","old_stack_limit","Error","stackTraceLimit","Infinity","stack","matches","matchAll","match","game","data","world","modules","has","system","active","known","exists","title","toLowerCase","split","length","logString","logStringCapitalized","str","charAt","toUpperCase","slice","settingsName","LibWrapperError","ui_msg","console_msg","notification_fn","args","super","captureStackTrace","LibWrapperInternalError","package_info","package_id","module","LibWrapperPackageError","possibly","game_user_data","return_null","orig_game_user_data","user","userid","userId","user_data","users","find","x","_id","LibWrapperNotifications","NOTIFICATION_SET","seal","ui_notifications_enabled","orig_game_user_isGM","isGM","role","game_user_isGM","settings","console","error","msg","add","notify","globalThis","ui","notifications","call","permanent","ready","_ui","Hooks","once","bind","vargs","other_info","potential","other","Array","isArray","map","join","console_ui","onUnhandledError","event","exc","reason","onUnhandled","apply","warn","LibWrapperStats","action","orig_game_user_can","can","permissions","game_permissions_str","rolePerms","JSON","parse","game_user_can","collect_stats","_collect_stats","PACKAGES","CONFLICTS","Map","wrapper","ignored","count","targets","target","target_data","conflicts","packages","IgnoredConflictEntry","ignore_infos","ignore_errors","is_warning","names","LibWrapperConflicts","IGNORED","entry","ignore_entries","clear","is_ignored","_is_ignored_oneway","forEach","register_conflict","_is_ignored","debug","frozen_names","LibWrapperAlreadyOverriddenError","conflicting_info","_wrapper","conflicting_id","conflicting_module","LibWrapperInvalidWrapperChainError","Wrapper","isFrozen","nm","arg1","fn_name","object","_lib_wrapper","_add_name","is_property","_wrapped_getter","_wrapped_setter","_wrapped","_get_inherited_descriptor","getter_data","_getter_data_id","setter_data","_setter_data_id","_outstanding_wrappers","_current_handler_id","_pending_wrapped_calls","_pending_wrapped_calls_cnt","update_use_static_dispatch","_wrap","handler_id","_cached_handler_id","_cached_handler","_this","handler_nm","_callstack_name","wrapped","is_static_dispatch","use_static_dispatch","should_skip_wrappers","get_wrapped","get_static_dispatch_chain","call_wrapper","toString","handler","fn_data_id","dispatch_chain","_cached_static_dispatch_chain_id","_cached_static_dispatch_chain_obj","_cached_static_dispatch_chain","_init_dispatch_chain","call_wrapped","fn_data","get_fn_data","i","chain","indexOf","perf_mode","SAFE","_calc_use_static_dispatch","getter_nm","setter_nm","setter","_get_handler","set_nonproperty","getter","iObj","getPrototypeOf","result","state","_call_wrapper_update_state","is_setter","is_dynamic_dispatch","pend","_cleanup_call_wrapped","then","v","pend_i","splice","index","next_index","is_last","next_state","called","valid","prev_data","next_fn","_cleanup_call_wrapper_thrown","_cleanup_call_wrapper","_invalidate_state","collect_affected","warned_conflict","affectedPackages","is_last_wrapper","filter","equals","libWrapper","unregister","conflict","skip_existing_handlers","warn_classic_wrapper","get_affected_packages","trace","detected_classic_wrapper","to_modify","prop_nm","sort","a","b","priority","_post_update_fn_data","PRIORITIES","load_priorities","priority_cfg","current","base_priority","entries","LibWrapperSettings","FormApplication","register","default","Boolean","scope","config","hint","registerMenu","label","icon","restricted","onChange","show_ignored_conflicts","defaultOptions","template","height","width","classes","tabs","navSelector","contentSelector","initial","submitOnClose","closeOnSubmit","options","yes_callback","Dialog","content","buttons","yes","callback","no","render","_d","d","total","other_id","obj_total","ret","prioritized","normal","deprioritized","priorities","cfg_prioritized","cfg_deprioritized","info","localeCompare","about","version","wrappers","getActiveWrappers","getConflicts","getPackages","html","activateListeners","on","$this","$","parent","toggleClass","checkbox","select","is","focus","which","up","selected","insertPos","prev","next","before","after","_from","_to","from","to","element","next_focus","append","val","empty","arr","each","option","attr","appendTo","submit","remove","showYesNoDialog","ev","formData","fld","old_prio","new_prio","counter","old_data","new_data","keys","location","reload","libwrapper_ready","allow_libwrapper_registrations","_create_wrapper_from_object","_split_target_and_setter","endsWith","_valid_identifier","ident","allow_dot","test","_get_target_object","_target","pop","root_nm","root","varname","get_global_variable","_find_wrapper_by_name","_name","_find_package_data_in_wrapper","_unwrap_if_possible","is_empty","unwrap","delete","_get_package_info","FORCE_FAST_MODE","versions","git_version","is_fallback","InternalError","PackageError","AlreadyOverriddenError","InvalidWrapperChainError","major","minor","patch","Function","target_and_setter","target_without_set","_create_wrapper","Number","MAX_VALUE","_get_default_priority","register_package","existing","callAll","fail","_find_package_data_with_target","ignore_ids","is_string","every","register_ignore","_UT_unwrap_all","_UT_create_wrapper_from_object","_UT_clear","_UT_force_fast_mode","new_fast_mode","_UT_get_force_fast_mode","_UT_clear_ignores","clear_ignores","addEventListener","orig","_call","patched","replace","log","patched_fn","catch","err","init_error_listeners","libWrapperInit","manifest","flags","version_str","parseInt","parse_manifest_version","init"],"mappings":"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"}