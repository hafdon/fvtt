{"version":3,"file":"webrtc-tweaks.bundle.js","mappings":"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","sources":["webpack://webrtc-tweaks/./src/utils/constants.ts","webpack://webrtc-tweaks/./src/utils/logging.ts","webpack://webrtc-tweaks/./src/utils/helpers.ts","webpack://webrtc-tweaks/./src/utils/registerModuleSettings.ts","webpack://webrtc-tweaks/./src/WebRTCTweaksPosition.ts","webpack://webrtc-tweaks/./src/utils/hooks.ts"],"sourcesContent":["export const MODULE_NAME = \"webrtc-tweaks\";\nexport const LANG_NAME = \"WEBRTC-TWEAKS\";\nexport const LOG_PREFIX = \"WebRTCTweaks |\";\n","import { LOG_PREFIX, MODULE_NAME } from \"./constants\";\n\n/* -------------------------------------------- */\n/*  Logging Methods                             */\n/* -------------------------------------------- */\n\n/**\n * Display debug messages on the console if debugging is enabled\n * Enabled by default and configured when game settings are available\n * @param {...*} args      Arguments to console.debug\n */\nexport let debug: (...args: unknown[]) => void = console.debug.bind(\n  console,\n  LOG_PREFIX\n);\n\n/**\n * Display info messages on the console if debugging is enabled\n * Enabled by default and configured when game settings are available\n * @param {...*} args      Arguments to console.info\n */\nexport let info: (...args: unknown[]) => void = console.info.bind(\n  console,\n  LOG_PREFIX\n);\n\n/**\n * Display warning messages on the console\n * @param {...*} args      Arguments to console.warn\n */\n\nexport const warn: (...args: unknown[]) => void = console.warn.bind(\n  console,\n  LOG_PREFIX\n);\n\n/**\n * Display error messages on the console\n * @param {...*} args      Arguments to console.error\n */\nexport const error: (...args: unknown[]) => void = console.error.bind(\n  console,\n  LOG_PREFIX\n);\n\n// Enable debug & info logs if debugging is enabled\nexport function setDebug(value: boolean): void {\n  if (value) {\n    debug = console.debug.bind(console, LOG_PREFIX);\n    info = console.info.bind(console, LOG_PREFIX);\n  } else {\n    debug = () => {\n      return;\n    };\n    info = () => {\n      return;\n    };\n  }\n\n  Hooks.callAll(`${MODULE_NAME}DebugSet`, value);\n}\n","import { LANG_NAME, MODULE_NAME } from \"./constants\";\nimport * as log from \"./logging\";\n\n/**\n * Typescript Interfaces\n */\n\n// AV Device Info object\ninterface DeviceInfo {\n  deviceId: string;\n  groupId: string;\n  label: string;\n  kind: \"audio\" | \"video\";\n}\n\n// Module Settings object\ninterface ModuleSettingsObject<T = unknown> {\n  name: string;\n  scope: string;\n  config: boolean;\n  default: boolean;\n  type: BooleanConstructor | undefined;\n  range?: T extends number\n    ? {\n        max: number;\n        min: number;\n        step: number;\n      }\n    : undefined;\n  onChange: (value: T) => void;\n}\n\n/**\n * Helper methods\n */\n\n/**\n * Issue a delayed (debounced) reload to the whole window.\n * Allows settings to get saved before reload\n */\nexport const delayReload: () => void = debounce(\n  () => window.location.reload(),\n  100\n);\n\nexport const sleep: (delay: number) => Promise<void> = (delay: number) =>\n  new Promise((resolve) => setTimeout(resolve, delay));\n\n/**\n * Transform the device info array from enumerated devices into an object with {id: label} keys\n * @param {Array} list    The list of devices\n */\nexport function deviceInfoToObject(\n  list: DeviceInfo[],\n  kind: \"audio\" | \"video\"\n): Record<string, string> {\n  const obj: Record<string, string> = {};\n  for (let i = 0; i < list.length; i += 1) {\n    if (list[i].kind === kind) {\n      obj[list[i].deviceId] =\n        list[i].label || getGame().i18n.localize(\"WEBRTC.UnknownDevice\");\n    }\n  }\n\n  return obj;\n}\n\nexport function getCanvas(): Canvas {\n  if (!(canvas instanceof Canvas) || !canvas.ready) {\n    throw new Error(\"Canvas is not yet ready.\");\n  }\n  return canvas;\n}\n\nexport function getGame(): Game {\n  if (!(game instanceof Game)) {\n    throw new Error(\"Game is not yet initialized.\");\n  }\n  return game;\n}\n\n/**\n * Dynamically load additional script files, returning when loaded\n * @param scriptSrc    The location of the script file\n */\nexport async function loadScript(scriptSrc: string): Promise<boolean> {\n  log.debug(\"Loading script:\", scriptSrc);\n  return new Promise((resolve, reject) => {\n    // Skip loading script if it is already loaded\n    if ($(`script[src=\"${scriptSrc}\"]`).length > 0) {\n      log.debug(\"Script already loaded:\", scriptSrc);\n      resolve(true);\n      return;\n    }\n\n    const scriptElement = document.createElement(\"script\");\n    $(\"head\").append(scriptElement);\n\n    scriptElement.type = \"text/javascript\";\n    scriptElement.src = scriptSrc;\n    scriptElement.onload = () => {\n      log.debug(\"Loaded script\", scriptSrc);\n      resolve(true);\n    };\n    scriptElement.onerror = (err) => {\n      log.error(\"Error loading script\", scriptSrc);\n      reject(err);\n    };\n  });\n}\n\nexport function registerModuleSetting(\n  settingsObject: ModuleSettingsObject\n): void {\n  getGame().settings.register(MODULE_NAME, settingsObject.name, {\n    name: `${LANG_NAME}.${settingsObject.name}`,\n    hint: `${LANG_NAME}.${settingsObject.name}Hint`,\n    scope: settingsObject.scope,\n    config: settingsObject.config,\n    default: settingsObject.default,\n    type: settingsObject.type,\n    range: settingsObject.range,\n    onChange: settingsObject.onChange,\n  });\n}\n","import { MODULE_NAME } from \"./constants\";\nimport { delayReload, getGame, registerModuleSetting } from \"./helpers\";\nimport * as log from \"./logging\";\n\nexport default function registerModuleSettings(): void {\n  // Register debug logging setting\n  registerModuleSetting({\n    name: \"debug\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => delayReload(),\n  });\n\n  // Set the initial debug level\n  log.setDebug(getGame().settings.get(MODULE_NAME, \"debug\") === true);\n}\n","import { getGame } from \"./utils/helpers\";\nimport * as log from \"./utils/logging\";\n\nexport default class WebRTCTweaksPosition {\n  // Is the FVTT server version 9. TODO: Remove if we drop support for lower versions\n  static isVersion9(): boolean {\n    return isNewerVersion(getGame().version || getGame().data.version, \"9\");\n  }\n\n  static addPositionButton(\n    element: JQuery<HTMLElement>,\n    cameraviews: CameraViews\n  ): void {\n    // Can't find it?\n    if (element.length !== 1) {\n      log.warn(\"Can't find CameraView toggle-popout element\", element);\n      return;\n    }\n    const positionButton = $(\n      '<a class=\"av-control toggle\" title=\"Change Position\"><i class=\"fas fa-arrows-alt\"></i></a>'\n    );\n    positionButton.on(\"click\", (event) =>\n      WebRTCTweaksPosition.onPositionButtonClicked(event, cameraviews)\n    );\n    element.after(positionButton);\n  }\n\n  static cameraViewHeightToWidth(height: number): number {\n    // Calculate desired width based on height with banner and padding\n    const width = (height - 32.5) * (4 / 3);\n    return width;\n  }\n\n  static cameraViewMaxWidth(dockSize: string | undefined): number {\n    let maxWidth = 320;\n    switch (dockSize) {\n      case \"large\":\n        maxWidth = 320;\n        break;\n      case \"medium\":\n        maxWidth = 240;\n        break;\n      case \"small\":\n        maxWidth = 160;\n        break;\n      default:\n        break;\n    }\n    return maxWidth;\n  }\n\n  static cameraViewsWidthFromWindowHeight(\n    cameraCount: number,\n    hidePlayerList: boolean\n  ): number {\n    // Calculate desired width of the camera views based on the height of the window,\n    //   number of users being displayed, and if the player list is visible\n    const hotbarOffsetTop = ui.hotbar?.element.offset()?.top || 0;\n    const navOffsetTop = ui.nav?.element.offset()?.top || 0;\n    const navHeight = ui.nav?.element.height() || 0;\n    let availableHeight = hotbarOffsetTop - (navOffsetTop + navHeight + 4);\n    if (!hidePlayerList) {\n      const playersHeight = ui.players?.element.height() || 0;\n      const hotbarHeight = ui.hotbar?.element.height() || 0;\n      availableHeight -= playersHeight - hotbarHeight + 4;\n    }\n    const heightPerCamera = availableHeight / cameraCount - 4;\n    const desiredWidth = this.cameraViewHeightToWidth(heightPerCamera);\n    return desiredWidth;\n  }\n\n  static async onCollapseSceneNavigation(): Promise<void> {\n    // Sleep for 300ms to give the bar time to collapse.\n    // TODO: Remove this if the bug is fixed to call the hook after transition.\n    await new Promise((r) => setTimeout(r, 300));\n    if (ui.webrtc) WebRTCTweaksPosition.setStyle(ui.webrtc, ui.webrtc?.element);\n  }\n\n  static onCollapseSidebar(): void {\n    if (ui.webrtc) WebRTCTweaksPosition.setStyle(ui.webrtc, ui.webrtc?.element);\n  }\n\n  static onPositionButtonClicked(\n    event: JQuery.ClickEvent,\n    cameraviews: CameraViews\n  ): void {\n    const cameraViews = cameraviews;\n    const positions = [\"top\", \"right\", \"bottom\", \"left\"];\n    const position = positions.indexOf(\n      cameraviews.webrtc?.settings.client.dockPosition || \"bottom\"\n    );\n    const nextPosition = position + 1 >= positions.length ? 0 : position + 1;\n    if (cameraViews.webrtc)\n      cameraViews.webrtc.settings.client.dockPosition = positions[nextPosition];\n\n    cameraViews.render(true);\n  }\n\n  static onRenderCameraViews(\n    cameraviews: CameraViews,\n    html: JQuery<HTMLElement>\n  ): void {\n    const cameraBox = html.find(`[data-user=\"${getGame().user?.id}\"]`);\n    const element = cameraBox.find('[data-action=\"toggle-popout\"]');\n    WebRTCTweaksPosition.addPositionButton(element, cameraviews);\n    WebRTCTweaksPosition.setStyle(cameraviews, html);\n  }\n\n  static onResize(): void {\n    if (ui.webrtc) WebRTCTweaksPosition.setStyle(ui.webrtc, ui.webrtc?.element);\n  }\n\n  // Set the left to adjust for the side bar\n  static setLeft(html: JQuery<HTMLElement>): void {\n    let leftPosition = ui.sidebar?.element.offset()?.left;\n    const htmlWidth = html.width();\n    if (leftPosition && htmlWidth) leftPosition -= htmlWidth + 4;\n    if (leftPosition) html.offset({ left: leftPosition });\n  }\n\n  static setStyle(cameraviews: CameraViews, html: JQuery<HTMLElement>): void {\n    const clientSettings = cameraviews.webrtc?.settings.client;\n    if (!clientSettings) {\n      log.warn(\"Cannot find WebRTC Client settings; skipping setStyle\");\n      return;\n    }\n\n    const { dockPosition } = clientSettings;\n    switch (dockPosition) {\n      case \"left\":\n        this.setTop(html, dockPosition);\n        this.setWidth(cameraviews, html);\n        break;\n      case \"top\":\n        this.setTop(html, dockPosition);\n        break;\n      case \"right\":\n        this.setTop(html, dockPosition);\n        this.setWidth(cameraviews, html);\n        this.setLeft(html);\n        break;\n      case \"bottom\":\n        this.setBottom(html);\n        break;\n      default:\n        break;\n    }\n  }\n\n  static setBottom(html: JQuery<HTMLElement>): void {\n    if (this.isVersion9()) {\n      const uiBottom = document.getElementById(\"ui-bottom\");\n      if (uiBottom) {\n        html.prependTo(uiBottom);\n      }\n    }\n  }\n\n  // Set the top to adjust for the nav bar\n  static setTop(html: JQuery<HTMLElement>, dockPosition: string): void {\n    if (this.isVersion9()) {\n      const uiTop = document.getElementById(\"ui-top\");\n      if (uiTop) {\n        html.appendTo(uiTop);\n      }\n    } else {\n      let topPosition = ui.nav?.element.offset()?.top;\n      if (!topPosition) {\n        log.warn(\"Unable to determine top position; skipping setTops\");\n        return;\n      }\n      if (\n        !ui.nav?.element.hasClass(\"collapsed\") &&\n        (!ui.sidebar?.element.hasClass(\"collapsed\") || dockPosition !== \"right\")\n      ) {\n        const navHeight = ui.nav?.element.height();\n        if (navHeight) topPosition += navHeight;\n      } else if (dockPosition !== \"right\") {\n        const toggleElement = ui.nav?.element.find(\"#nav-toggle\");\n        const toggleElementHeight = toggleElement?.height();\n        if (toggleElementHeight) topPosition += toggleElementHeight + 10;\n      }\n      html.offset({ top: topPosition });\n    }\n  }\n\n  // Set the width to adjust the height since flexbox doesn't handle this well in CSS\n  static setWidth(cameraviews: CameraViews, html: JQuery<HTMLElement>): void {\n    // Check if the player list is visible\n    let hidePlayerList = true;\n    if (cameraviews.webrtc?.settings.client.dockPosition === \"left\") {\n      hidePlayerList = cameraviews.webrtc.settings.client.hidePlayerList;\n    }\n\n    // Determine the desired width\n    const desiredWidth = this.cameraViewsWidthFromWindowHeight(\n      html.children().length,\n      hidePlayerList\n    );\n\n    // Set the width so that the height auto adjusts\n    if (\n      desiredWidth <\n      this.cameraViewMaxWidth(cameraviews.webrtc?.settings.client.dockSize)\n    ) {\n      html.width(desiredWidth);\n    }\n  }\n}\n","import registerModuleSettings from \"./registerModuleSettings\";\nimport WebRTCTweaksPosition from \"../WebRTCTweaksPosition\";\n\n/* -------------------------------------------- */\n/*  Hook calls                                  */\n/* -------------------------------------------- */\n\nHooks.once(\"init\", () => {\n  // Register module settings\n  registerModuleSettings();\n});\n\nHooks.on(\"setup\", () => {\n  Hooks.on(\"renderCameraViews\", WebRTCTweaksPosition.onRenderCameraViews);\n  Hooks.on(\"collapseSidebar\", WebRTCTweaksPosition.onCollapseSidebar);\n  Hooks.on(\"sidebarCollapse\", WebRTCTweaksPosition.onCollapseSidebar); // Legacy name\n  Hooks.on(\n    \"collapseSceneNavigation\",\n    WebRTCTweaksPosition.onCollapseSceneNavigation\n  );\n  window.addEventListener(\"resize\", WebRTCTweaksPosition.onResize);\n});\n"],"names":["MODULE_NAME","LANG_NAME","LOG_PREFIX","debug","console","bind","info","warn","error","delayReload","debounce","window","location","reload","getGame","game","Game","Error","registerModuleSettings","settingsObject","value","name","scope","config","default","type","Boolean","onChange","settings","register","hint","range","get","Hooks","callAll","WebRTCTweaksPosition","static","isNewerVersion","version","data","element","cameraviews","length","positionButton","$","on","event","onPositionButtonClicked","after","height","dockSize","maxWidth","cameraCount","hidePlayerList","availableHeight","ui","hotbar","offset","top","nav","players","heightPerCamera","this","cameraViewHeightToWidth","Promise","r","setTimeout","webrtc","setStyle","cameraViews","positions","position","indexOf","client","dockPosition","nextPosition","render","html","find","user","id","addPositionButton","leftPosition","sidebar","left","htmlWidth","width","clientSettings","setTop","setWidth","setLeft","setBottom","isVersion9","uiBottom","document","getElementById","prependTo","uiTop","appendTo","topPosition","hasClass","toggleElement","toggleElementHeight","navHeight","desiredWidth","cameraViewsWidthFromWindowHeight","children","cameraViewMaxWidth","once","onRenderCameraViews","onCollapseSidebar","onCollapseSceneNavigation","addEventListener","onResize"],"sourceRoot":""}